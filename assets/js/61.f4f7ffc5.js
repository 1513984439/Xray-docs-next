(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{476:function(t,s,a){"use strict";a.r(s);var v=a(20),e=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" HTTP/2")]),t._v(" "),a("p",[t._v("基于 HTTP/2 的传输方式。")]),t._v(" "),a("p",[t._v("它完整按照 HTTP/2 标准实现，可以通过其它的 HTTP 服务器（如 Nginx）进行中转。")]),t._v(" "),a("p",[t._v("由 HTTP/2 的建议，客户端和服务器必须同时开启 TLS 才可以正常使用这个传输方式。")]),t._v(" "),a("p",[t._v("HTTP/2 内置多路复用，不建议使用 HTTP/2 时启用 mux.cool。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("当前版本的 HTTP/2 的传输方式并不强制要求服务器端有 TLS 配置.\n这使得可以在特殊用途的分流部署环境中，由外部网关组件完成 TLS 层对话，Xray 作为后端应用，网关和 Xray 间使用称为 "),a("code",[t._v("h2c")]),t._v(" 的明文 http/2 进行通讯。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("⚠️ 如果你正在使用回落，请注意下列事项：")]),t._v(" "),a("ul",[a("li",[t._v("请确认 (x)tlsSettings.alpn 中包含 h2，否则 HTTP/2 无法完成 TLS 握手。")]),t._v(" "),a("li",[t._v("HTTP/2 无法通过进行 Path 分流，建议使用 SNI 分流。")])])]),t._v(" "),a("h2",{attrs:{id:"httpobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#httpobject"}},[t._v("#")]),t._v(" HttpObject")]),t._v(" "),a("p",[a("code",[t._v("HttpObject")]),t._v(" 对应传输配置的 "),a("code",[t._v("httpSettings")]),t._v(" 项。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xray.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/random/path"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("host")]),t._v(": [string]")])]),t._v(" "),a("p",[t._v("一个字符串数组，每一个元素是一个域名。")]),t._v(" "),a("p",[t._v("客户端会随机从列表中选出一个域名进行通信，服务器会验证域名是否在列表中。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("path")]),t._v(" string")])]),t._v(" "),a("p",[t._v("HTTP 路径，由 "),a("code",[t._v("/")]),t._v(" 开头, 客户端和服务器必须一致。")]),t._v(" "),a("p",[t._v("默认值为 "),a("code",[t._v('"/"')]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);