(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{397:function(t,s,a){"use strict";a.r(s);var e=a(26),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vless"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vless"}},[t._v("#")]),t._v(" VLESS")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("目前 VLESS 没有自带加密，请用于可靠信道，如 TLS。\n目前 VLESS 不支持分享。")])]),t._v(" "),a("p",[t._v("VLESS 是一个无状态的轻量传输协议，它分为入站和出站两部分，可以作为 Xray 客户端和服务器之间的桥梁。")]),t._v(" "),a("p",[t._v("与 "),a("RouterLink",{attrs:{to:"/config/outbounds/vmess.html"}},[t._v("VMess")]),t._v(" 不同，VLESS 不依赖于系统时间，认证方式同样为 UUID，但不需要 alterId。")],1),t._v(" "),a("h2",{attrs:{id:"outboundconfigurationobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outboundconfigurationobject"}},[t._v("#")]),t._v(" OutboundConfigurationObject")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vnext"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"users"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5783a3e7-e373-51cd-8642-c83782b807c5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encryption"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flow"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xtls-rprx-direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("vnext")]),t._v(": [ "),a("a",{attrs:{href:"#serverobject"}},[t._v("ServerObject")]),t._v(" ]")])]),t._v(" "),a("p",[t._v("一个数组, 表示 VLESS 服务器列表，包含一组指向服务端的配置, 其中每一项是一个服务器配置。")]),t._v(" "),a("h3",{attrs:{id:"serverobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverobject"}},[t._v("#")]),t._v(" ServerObject")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"users"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5783a3e7-e373-51cd-8642-c83782b807c5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encryption"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flow"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xtls-rprx-direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("address")]),t._v(": address")])]),t._v(" "),a("p",[t._v("服务端地址，指向服务端，支持域名、IPv4、IPv6。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("port")]),t._v(": number")])]),t._v(" "),a("p",[t._v("服务端端口，通常与服务端监听的端口相同。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("users")]),t._v(": [ "),a("a",{attrs:{href:"#userobject"}},[t._v("UserObject")]),t._v(" ]")])]),t._v(" "),a("p",[t._v("数组, 一组服务端认可的用户列表, 其中每一项是一个用户配置")]),t._v(" "),a("h3",{attrs:{id:"userobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#userobject"}},[t._v("#")]),t._v(" UserObject")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5783a3e7-e373-51cd-8642-c83782b807c5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"encryption"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flow"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xtls-rprx-direct"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("id")]),t._v(": string")])]),t._v(" "),a("p",[t._v("VLESS 的用户 ID，可以是任意小于30字节的字符串, 也可以是一个合法的UUID.\n自定义字符串和其映射的 UUID 是等价的, 这意味着你将可以这样在配置文件中写id来标识同一用户,即")]),t._v(" "),a("ul",[a("li",[t._v('写    "id": "我爱🍉老师1314",')]),t._v(" "),a("li",[t._v('或写    "id": "5783a3e7-e373-51cd-8642-c83782b807c5" (此UUID是 '),a("code",[t._v("我爱🍉老师1314")]),t._v(" 的 UUID 映射)")])]),t._v(" "),a("p",[t._v("其映射标准在"),a("a",{attrs:{href:"https://github.com/XTLS/Xray-core/issues/158",target:"_blank",rel:"noopener noreferrer"}},[t._v("VLESS UUID 映射标准：将自定义字符串映射为一个 UUIDv5"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("你可以使用命令 "),a("code",[t._v('xray uuid -map "自定义字符串"')]),t._v(" 生成自定义字符串所映射的的 UUID，也可以使用命令 "),a("code",[t._v("xray uuid")]),t._v(" 生成随机的UUID.")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("encryption")]),t._v(': "none"')])]),t._v(" "),a("p",[t._v("需要填 "),a("code",[t._v('"none"')]),t._v("，不能留空。")]),t._v(" "),a("p",[t._v("该要求是为了提醒使用者没有加密，也为了以后出加密方式时，防止使用者填错属性名或填错位置导致裸奔。")]),t._v(" "),a("p",[t._v("若未正确设置 encryption 的值，使用 Xray 或 -test 时会收到错误信息。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("flow")]),t._v(": string")])]),t._v(" "),a("p",[t._v("流控模式，用于选择 XTLS 的算法。")]),t._v(" "),a("p",[t._v("目前出站协议中有以下流控模式可选：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("xtls-rprx-origin")]),t._v("：最初的流控模式。该模式纪念价值大于实际使用价值")]),t._v(" "),a("li",[a("code",[t._v("xtls-rprx-origin-udp443")]),t._v("：同 "),a("code",[t._v("xtls-rprx-origin")]),t._v(", 但放行了目标为 443 端口的 UDP 流量")]),t._v(" "),a("li",[a("code",[t._v("xtls-rprx-direct")]),t._v("：所有平台皆可使用的典型流控模式")]),t._v(" "),a("li",[a("code",[t._v("xtls-rprx-direct-udp443")]),t._v("：同 "),a("code",[t._v("xtls-rprx-direct")]),t._v(", 但是放行了目标为 443 端口的 UDP 流量")]),t._v(" "),a("li",[a("code",[t._v("xtls-rprx-splice")]),t._v("：Linux 平台下最建议使用的流控模式")]),t._v(" "),a("li",[a("code",[t._v("xtls-rprx-splice-udp443")]),t._v("：同 "),a("code",[t._v("xtls-rprx-splice")]),t._v(", 但是放行了目标为 443 端口的 UDP 流量")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("flow")]),t._v(" 被指定时，还需要将该出站协议的 "),a("code",[t._v("streamSettings.security")]),t._v(" 一项指定为 "),a("code",[t._v("xtls")]),t._v("，"),a("code",[t._v("tlsSettings")]),t._v(" 改为 "),a("code",[t._v("xtlsSettings")]),t._v("。详情请参考 "),a("RouterLink",{attrs:{to:"/config/transport.html#streamsettingsobject"}},[t._v("streamSettings")]),t._v("。")],1),t._v(" "),a("p",[t._v("此外，目前 XTLS 仅支持 TCP、mKCP、DomainSocket 这三种传输方式。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于 xtls-rprx-*-udp443 流控模式")]),t._v(" "),a("p",[t._v("启用了 Xray-core 的 XTLS 时，通往 UDP 443 端口的流量默认会被拦截（一般情况下为 QUIC），这样应用就不会使用 QUIC 而会使用 TLS，XTLS 才会真正生效。实际上，QUIC 本身也不适合被代理，因为 QUIC 自带了 TCP 的功能，它作为 UDP 流量在通过 VLESS 协议传输时，底层协议为 TCP，就相当于两层 TCP 了。")]),t._v(" "),a("p",[t._v("若不需要拦截，请在客户端填写 "),a("code",[t._v("xtls-rprx-*-udp443")]),t._v("，服务端不变。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于 Splice 模式")]),t._v(" "),a("p",[t._v("Splice 是 Linux Kernel 提供的函数，系统内核直接转发 TCP，不再经过 Xray 的内存，大大减少了数据拷贝、CPU 上下文切换的次数。")])]),t._v(" "),a("p",[t._v("Splice 模式的的使用限制：")]),t._v(" "),a("ul",[a("li",[t._v("Linux 环境")]),t._v(" "),a("li",[t._v("入站协议为 "),a("code",[t._v("Dokodemo door")]),t._v("、"),a("code",[t._v("Socks")]),t._v("、"),a("code",[t._v("HTTP")]),t._v(" 等纯净的 TCP 连接, 或其它使用了 XTLS 的入站协议")]),t._v(" "),a("li",[t._v("出站协议为 VLESS + XTLS 或 Trojan + XTLS")])]),t._v(" "),a("p",[t._v("此外，使用 Splice 时网速显示会滞后，这是特性，不是 bug。")]),t._v(" "),a("p",[t._v("需要注意的是，使用 mKCP 协议时不会使用 Splice（是的，虽然没有报错，但实际上根本没用到）。")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("level")]),t._v(": number")])]),t._v(" "),a("p",[t._v("用户等级，连接会使用这个用户等级对应的"),a("RouterLink",{attrs:{to:"/config/policy.html#levelpolicyobject"}},[t._v("本地策略")]),t._v("。")],1),t._v(" "),a("p",[t._v("level 的值, 对应 "),a("RouterLink",{attrs:{to:"/config/policy.html#policyobject"}},[t._v("policy")]),t._v(" 中 level 的值. 如不指定, 默认为 0.")],1)])}),[],!1,null,null,null);s.default=r.exports}}]);