(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{438:function(t,s,r){"use strict";r.r(s);var a=r(26),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"trojan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trojan"}},[t._v("#")]),t._v(" Trojan")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://trojan-gfw.github.io/trojan/protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trojan"),r("OutboundLink")],1),t._v(" 协议")]),t._v(" "),r("div",{staticClass:"custom-block danger"},[r("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),r("p",[t._v("Trojan 被设计工作在正确配置的加密 TLS 隧道")])]),t._v(" "),r("h2",{attrs:{id:"outboundconfigurationobject"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#outboundconfigurationobject"}},[t._v("#")]),t._v(" OutboundConfigurationObject")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"servers"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"love@xray.com"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flow"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xtls-rprx-direct"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("blockquote",[r("p",[r("code",[t._v("servers")]),t._v(": [ "),r("a",{attrs:{href:"#serverobject"}},[t._v("ServerObject")]),t._v(" ]")])]),t._v(" "),r("p",[t._v("一个数组，其中每一项是一个 "),r("a",{attrs:{href:"#serverobject"}},[t._v("ServerObject")]),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"serverobject"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#serverobject"}},[t._v("#")]),t._v(" ServerObject")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"address"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"love@xray.com"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"flow"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xtls-rprx-direct"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"level"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("blockquote",[r("p",[r("code",[t._v("address")]),t._v(": address")])]),t._v(" "),r("p",[t._v("服务端地址，支持 IPv4、IPv6 和域名。必填。")]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("port")]),t._v(": number")])]),t._v(" "),r("p",[t._v("服务端端口，通常与服务端监听的端口相同。")]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("password")]),t._v(": string")])]),t._v(" "),r("p",[t._v("密码. 必填，任意字符串。")]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("email")]),t._v(": string")])]),t._v(" "),r("p",[t._v("邮件地址，可选，用于标识用户")]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("flow")]),t._v(": string")])]),t._v(" "),r("p",[t._v("流控模式，用于选择 XTLS 的算法。")]),t._v(" "),r("p",[t._v("目前出站协议中有以下流控模式可选：")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("xtls-rprx-origin")]),t._v("：最初的流控模式。该模式纪念价值大于实际使用价值")]),t._v(" "),r("li",[r("code",[t._v("xtls-rprx-origin-udp443")]),t._v("：同 "),r("code",[t._v("xtls-rprx-origin")]),t._v(", 但放行了目标为 443 端口的 UDP 流量")]),t._v(" "),r("li",[r("code",[t._v("xtls-rprx-direct")]),t._v("：所有平台皆可使用的典型流控模式")]),t._v(" "),r("li",[r("code",[t._v("xtls-rprx-direct-udp443")]),t._v("：同 "),r("code",[t._v("xtls-rprx-direct")]),t._v(", 但是放行了目标为 443 端口的 UDP 流量")]),t._v(" "),r("li",[r("code",[t._v("xtls-rprx-splice")]),t._v("：Linux 平台下最建议使用的流控模式")]),t._v(" "),r("li",[r("code",[t._v("xtls-rprx-splice-udp443")]),t._v("：同 "),r("code",[t._v("xtls-rprx-splice")]),t._v(", 但是放行了目标为 443 端口的 UDP 流量")])]),t._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[t._v("当 "),r("code",[t._v("flow")]),t._v(" 被指定时，还需要将该出站协议的 "),r("code",[t._v("streamSettings.security")]),t._v(" 一项指定为 "),r("code",[t._v("xtls")]),t._v("，"),r("code",[t._v("tlsSettings")]),t._v(" 改为 "),r("code",[t._v("xtlsSettings")]),t._v("。详情请参考  "),r("RouterLink",{attrs:{to:"/config/transport.html#streamsettingsobject"}},[t._v("streamSettings")]),t._v("。")],1)]),t._v(" "),r("p",[t._v("此外，目前 XTLS 仅支持 TCP、mKCP、DomainSocket 这三种传输方式。")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("关于 xtls-rprx-*-udp443 流控模式")]),t._v(" "),r("p",[t._v("启用了 Xray-core 的 XTLS 时，通往 UDP 443 端口的流量默认会被拦截（一般情况下为 QUIC），这样应用就不会使用 QUIC 而会使用 TLS，XTLS 才会真正生效。实际上，QUIC 本身也不适合被代理，因为 QUIC 自带了 TCP 的功能， 它作为 UDP 流量在通过 Trojan 协议传输时，底层协议为 TCP，就相当于两层 TCP 了。")]),t._v(" "),r("p",[t._v("若不需要拦截，请在客户端填写 "),r("code",[t._v("xtls-rprx-*-udp443")]),t._v("，服务端不变。")])]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("关于 Splice 模式")]),t._v(" "),r("p",[t._v("Splice 是 Linux Kernel 提供的函数，系统内核直接转发 TCP，不再经过 Xray 的内存，大大减少了数据拷贝、CPU 上下文切换的次数。")])]),t._v(" "),r("p",[t._v("Splice 模式的的使用限制：")]),t._v(" "),r("ul",[r("li",[t._v("Linux 环境")]),t._v(" "),r("li",[t._v("入站协议为 "),r("code",[t._v("Dokodemo door")]),t._v("、"),r("code",[t._v("Socks")]),t._v("、"),r("code",[t._v("HTTP")]),t._v(" 等纯净的 TCP 连接, 或其它使用了 XTLS 的入站协议")]),t._v(" "),r("li",[t._v("出站协议为 VLESS + XTLS 或 Trojan + XTLS")])]),t._v(" "),r("p",[t._v("此外，使用 Splice 时网速显示会滞后，这是特性，不是 bug。")]),t._v(" "),r("p",[t._v("需要注意的是，使用 mKCP 协议时不会使用 Splice（是的，虽然没有报错，但实际上根本没用到）。")]),t._v(" "),r("blockquote",[r("p",[r("code",[t._v("level")]),t._v(": number")])]),t._v(" "),r("p",[t._v("用户等级，连接会使用这个用户等级对应的 "),r("RouterLink",{attrs:{to:"/config/policy.html#levelpolicyobject"}},[t._v("本地策略")]),t._v("。")],1),t._v(" "),r("p",[t._v("level 的值, 对应 "),r("RouterLink",{attrs:{to:"/config/policy.html#policyobject"}},[t._v("policy")]),t._v(" 中 "),r("code",[t._v("level")]),t._v(" 的值。 如不指定, 默认为 0。")],1)])}),[],!1,null,null,null);s.default=e.exports}}]);