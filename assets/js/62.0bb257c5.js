(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{451:function(a,t,s){"use strict";s.r(t);var e=s(26),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"命令参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令参数"}},[a._v("#")]),a._v(" 命令参数")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("Xray 使用 go 风格的命令及参数")])]),a._v(" "),s("h2",{attrs:{id:"获取基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取基本命令"}},[a._v("#")]),a._v(" 获取基本命令")]),a._v(" "),s("p",[a._v("您可以运行 "),s("code",[a._v("xray help")]),a._v(" 来获得所有 xray 最基础的用法, 以及可用的命令及说明.")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Xray is a platform for building proxies.\n\nUsage:\n\n        xray <command> [arguments]\n\nThe commands are:\n\n        run          Run Xray with config, the default command\n        version      Show current version of Xray\n        api          Call an API in an Xray process\n        tls          TLS tools\n        uuid         Generate new UUIDs\n\nUse "xray help <command>" for more information about a command.\n')])])]),s("h3",{attrs:{id:"xray-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xray-run"}},[a._v("#")]),a._v(" xray run")]),a._v(" "),s("p",[a._v("指定一个或多个配置文件，并运行。")]),a._v(" "),s("p",[a._v("使用方法:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(" xray run [-c config.json] [-confdir dir]\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Run Xray with config, the default command.\n\nThe -config=file, -c=file flags set the config files for\nXray. Multiple assign is accepted.\n\nThe -confdir=dir flag sets a dir with multiple json config\n\nThe -format=json flag sets the format of config files.\nDefault "json".\n\nThe -test flag tells Xray to test config files only,\nwithout launching the server\n')])])]),s("h3",{attrs:{id:"xray-version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xray-version"}},[a._v("#")]),a._v(" xray version")]),a._v(" "),s("p",[a._v("输出 Xray 版本、 Golang 版本等信息。")]),a._v(" "),s("p",[a._v("使用方法:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(" xray version\n")])])]),s("h3",{attrs:{id:"xray-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xray-api"}},[a._v("#")]),a._v(" xray api")]),a._v(" "),s("p",[a._v("调用 Xray 的 gRPC API，需要在配置文件中开启。")]),a._v(" "),s("p",[a._v("使用方法:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("xray api <command> [arguments]\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("        restartlogger Restart the logger\n        stats         Get statistics\n        statsquery    Query statistics\n        statssys      Get system statistics\n        adi           Add inbounds\n        ado           Add outbounds\n        rmi           Remove inbounds\n        rmo           Remove outbounds\n")])])]),s("h3",{attrs:{id:"xray-tls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xray-tls"}},[a._v("#")]),a._v(" xray tls")]),a._v(" "),s("p",[a._v("一些与 TLS 相关的工具。")]),a._v(" "),s("p",[a._v("使用方法:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("xray tls <command> [arguments]\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("        cert         Generate TLS certificates\n        ping         Ping the domain with TLS handshake\n")])])]),s("h3",{attrs:{id:"xray-uuid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xray-uuid"}},[a._v("#")]),a._v(" xray uuid")]),a._v(" "),s("p",[a._v("生成 UUID。")]),a._v(" "),s("p",[a._v("使用方法:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("xray uuid\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("当"),s("code",[a._v("-config")]),a._v("没有指定时，Xray 将先后尝试从以下路径加载"),s("code",[a._v("config.json")]),a._v(":")]),a._v(" "),s("ul",[s("li",[a._v("工作目录（Working Directory）")]),a._v(" "),s("li",[s("RouterLink",{attrs:{to:"/config/features/env.html#资源文件路径"}},[a._v("环境变量")]),a._v("中"),s("code",[a._v("Xray.location.asset")]),a._v("所指定的路径")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);