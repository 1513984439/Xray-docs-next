(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[5650],{8048:(e,l,r)=>{"use strict";r.r(l),r.d(l,{data:()=>n});const n={key:"v-95e3eaea",path:"/development/intro/design.html",title:"设计目标",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"架构",slug:"架构",children:[{level:3,title:"应用层",slug:"应用层",children:[]},{level:3,title:"代理层",slug:"代理层",children:[]},{level:3,title:"传输层",slug:"传输层",children:[]}]}],filePathRelative:"development/intro/design.md",git:{updatedTime:1618115805e3,contributors:[]}}},407:(e,l,r)=>{"use strict";r.r(l),r.d(l,{default:()=>j});var n=r(6252);const a=r.p+"assets/img/framework.c9d5f6bd.png",t=(0,n.Wm)("h1",{id:"设计目标",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#设计目标","aria-hidden":"true"},"#"),(0,n.Uk)(" 设计目标")],-1),i=(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,"Xray 内核提供了一个平台，支持必要的网络代理功能，在其之上可以进二次开发，以提供更好的用户体验；"),(0,n.Wm)("li",null,"以跨平台为首要原则，以减少二次开发的成本；")],-1),u=(0,n.Wm)("h2",{id:"架构",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#架构","aria-hidden":"true"},"#"),(0,n.Uk)(" 架构")],-1),d=(0,n.Wm)("p",null,[(0,n.Wm)("img",{src:a,alt:"Architecture"})],-1),h=(0,n.Wm)("p",null,"内核分为三层：应用层、代理层和传输层。",-1),m=(0,n.Wm)("p",null,"每一层内包含数个模块，模块间互相独立，同类型的模块可无缝替换。",-1),o=(0,n.Wm)("h3",{id:"应用层",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#应用层","aria-hidden":"true"},"#"),(0,n.Uk)(" 应用层")],-1),s=(0,n.Wm)("p",null,"应用层包含一些代理层中常用的功能，这些功能被抽象出来，以便在不同的代理模块中复用。",-1),W=(0,n.Wm)("p",null,"应用层的模块应为纯软件实现，与硬件或平台相关的技术无关。",-1),c=(0,n.Wm)("p",null,"重要模块列表：",-1),p=(0,n.Wm)("li",null,"Dispatcher: 用于把入站代理所接收到的数据，传送给出站代理；",-1),k=(0,n.Uk)("Router: 路由模块，详见 "),b=(0,n.Uk)("路由配置"),f=(0,n.Uk)("；"),g=(0,n.Wm)("li",null,"DNS: 内置的 DNS 服务器模块；",-1),x=(0,n.Wm)("li",null,"Proxy Manager: 代理管理器；",-1),U=(0,n.Wm)("h3",{id:"代理层",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#代理层","aria-hidden":"true"},"#"),(0,n.Uk)(" 代理层")],-1),y=(0,n.Wm)("p",null,"代理层分为两部分：入站代理（Inbound Proxy）和出站代理（Outbound Proxy）。",-1),v=(0,n.Wm)("p",null,"两部分相互独立，入站代理不依赖于某个特定的出站代理，反之亦然。",-1),_=(0,n.Wm)("h4",{id:"入站代理",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#入站代理","aria-hidden":"true"},"#"),(0,n.Uk)(" 入站代理")],-1),w=(0,n.Uk)("实现 "),X={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},P=(0,n.Uk)("proxy.Inbound"),C=(0,n.Uk)(" 接口；"),D=(0,n.Wm)("h4",{id:"出站代理",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#出站代理","aria-hidden":"true"},"#"),(0,n.Uk)(" 出站代理")],-1),N=(0,n.Uk)("实现 "),O={href:"https://github.com/xtls/Xray-core/blob/main/proxy/proxy.go",target:"_blank",rel:"noopener noreferrer"},R=(0,n.Uk)("proxy.Outbound"),I=(0,n.Uk)(" 接口；"),L=(0,n.Wm)("h3",{id:"传输层",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#传输层","aria-hidden":"true"},"#"),(0,n.Uk)(" 传输层")],-1),S=(0,n.Wm)("p",null,"传输层提供一些网络数据传输相关的工具模块。",-1),j={render:function(e,l){const r=(0,n.up)("RouterLink"),a=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[t,i,u,d,h,m,o,s,W,c,(0,n.Wm)("ul",null,[p,(0,n.Wm)("li",null,[k,(0,n.Wm)(r,{to:"/config/routing.html"},{default:(0,n.w5)((()=>[b])),_:1}),f]),g,x]),U,y,v,_,(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[w,(0,n.Wm)("a",X,[P,(0,n.Wm)(a)]),C])]),D,(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[N,(0,n.Wm)("a",O,[R,(0,n.Wm)(a)]),I])]),L,S],64)}}}}]);