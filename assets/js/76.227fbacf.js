(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{426:function(_,v,o){"use strict";o.r(v);var t=o(20),e=function(_){_.options.__data__block__={mermaid_64a561de:'    graph LR;\n\n    S(APP数据) .-> I[入站]\n\n    subgraph Xray\n    I --\x3e R[路由] -- "geosite:category-ads-all" --\x3e O1[block]\n\n    R[路由] -- "geosite:cn" --\x3e O2[direct]\n    R[路由] -- "direct.yourdomain.com" --\x3e O2[direct]\n    R[路由] -- "geoip:private" --\x3e O2[direct]\n    R[路由] -- "geoip:cn" --\x3e O2[direct]\n    R[路由] -- "ip:223.5.5.5" --\x3e O2[direct]\n    R[路由] -- "protocol:bittorrent" --\x3e O2[direct]\n\n    R[路由] -- "geosite:geolocation-!cn" --\x3e O3[proxy]\n    R[路由] -- "proxy.yourdomain.com" --\x3e O3[proxy]\n    R[路由] -- "*.yourdomain.com" --\x3e O3[proxy]\n    R[路由] -- "ip:1.1.1.1" --\x3e O3[proxy]\n\n    R[路由] -. "没有命中规则的流量" .-> O4[第一条出站]\n\n    end\n\n    O2 .-> D(国内服务器)\n    O3 .-> V(VPS)\n\n    O1:::redclass\n    V:::greyclass\n    S:::greyclass\n    R:::routingclass\n    classDef redclass fill:#FF0000\n    classDef greyclass fill:#C0C0C0\n    classDef routingclass fill:#FFFFDE,stroke:#000000\n\n'}},n=Object(t.a)({},(function(){var _=this,v=_.$createElement,o=_._self._c||v;return o("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[o("h1",{attrs:{id:"路由-routing-功能简析-下"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#路由-routing-功能简析-下"}},[_._v("#")]),_._v(" 路由 (routing) 功能简析（下）")]),_._v(" "),o("p",[_._v("欢迎继续学习 "),o("code",[_._v("Xray")]),_._v(" 的【路由】功能！")]),_._v(" "),o("p",[_._v("在 "),o("a",{attrs:{href:"./routing-lv1-part1"}},[_._v("《路由 (routing) 功能简析（上）》")]),_._v(" 中，我们已经对【路由】功能的工作逻辑有了清晰的理解，也基于 "),o("code",[_._v("geosite.dat")]),_._v(" 文件做了简单的域名分流配置。")]),_._v(" "),o("p",[_._v("如前面所说，域名分流仅仅是【路由】功能的牛刀小试而已。下面就让我们来看看除了域名之外，还什么可以用做分流依据的东西吧！")]),_._v(" "),o("h2",{attrs:{id:"_5-攻城略池-多种路由匹配条件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-攻城略池-多种路由匹配条件"}},[_._v("#")]),_._v(" 5. 攻城略池 - 多种路由匹配条件")]),_._v(" "),o("blockquote",[o("p",[o("code",[_._v("[域名], [IP], [协议], etc.")])])]),_._v(" "),o("p",[_._v("基于域名的分流，已经可以让我们对网络流量进行基本合理的分流。为什么说【基本合理】呢？")]),_._v(" "),o("p",[_._v("因为【三分天下】虽然是正确的战略方向，但如果只用【域名】来实现这个战略，其实漏洞百出，比如：")]),_._v(" "),o("ol",[o("li",[_._v("我读了《小小白白话文》后，给 VPS 新申请了一个 "),o("code",[_._v("proxy.yourdomain.com")]),_._v(" 的域名, 我希望它无论如何都代理，"),o("code",[_._v("geosite.dat")]),_._v(" 里面有吗？")]),_._v(" "),o("li",[_._v("如果我还有个 "),o("code",[_._v("direct.yourdomain.com")]),_._v(" 的域名，我希望它无论如何都直连， "),o("code",[_._v("geosite.dat")]),_._v(" 里面有吗？")]),_._v(" "),o("li",[_._v("本机 "),o("code",[_._v("127.0.0.1")]),_._v(" 的内部流量，是否正确直连了？（比如 "),o("code",[_._v("docker")]),_._v(" 等）")]),_._v(" "),o("li",[_._v("路由器、本地局域网 "),o("code",[_._v("192.168.*.*")]),_._v(" 的流量，是否正确直连了？（比如路由器、群晖等）")]),_._v(" "),o("li",[_._v("我的国内 DNS 查询（如 "),o("code",[_._v("223.5.5.5")]),_._v("）是否正确直连了？")]),_._v(" "),o("li",[_._v("我的国外 DNS 查询（如 "),o("code",[_._v("1.1.1.1")]),_._v("）是否正确代理了？")]),_._v(" "),o("li",[_._v("其他类似国内公共 DNS 一样没有域名、只有 IP 地址的国内网站，是否正确直连了？")]),_._v(" "),o("li",[_._v("其他类似国外公共 DNS 一样没有域名、只有 IP 地址的国外网站，是否正确代理了？")]),_._v(" "),o("li",[_._v("BT 下载的流量，虽然来源是国外，但如果通过 VPS 下载很可能导致违规使用被封，这该如何强制直连？")]),_._v(" "),o("li",[_._v("......")])]),_._v(" "),o("p",[_._v("我之所以说只用【域名分流】会漏洞百出，是因为 "),o("code",[_._v("geosite.dat")]),_._v(" 文件内只包含了一部分常用的域名。换言之，仅仅依赖它，则会：")]),_._v(" "),o("ul",[o("li",[_._v("无法匹配文件里没有的新域名")]),_._v(" "),o("li",[_._v("无法匹配基于 IP 地址的规则")]),_._v(" "),o("li",[_._v("无法匹配基于网络协议的规则")])]),_._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[_._v("啰嗦君")]),_._v(" "),o("p",[_._v("那我们来复习一下，当上面这些情况无法匹配时，会发生什么？对了，会触发隐藏路由规则，即【"),o("strong",[_._v("转发给第一个出站")]),_._v(" 】。这其实就是说：")]),_._v(" "),o("ul",[o("li",[_._v("当你的第一个出站是 "),o("code",[_._v("[direct-out]")]),_._v(" 时："),o("strong",[_._v("需要直连的都正确了，但需要代理的则都错误")])]),_._v(" "),o("li",[_._v("当你的第一个出站是 "),o("code",[_._v("[proxy-out-vless]")]),_._v(" 时："),o("strong",[_._v("需要代理的都正确了，但需要直连的则都错误")])])])]),_._v(" "),o("p",[_._v("所以，我们需要一个办法，让我们鱼与熊掌兼得。这样的办法是否存在呢？"),o("strong",[_._v("当然存在！")]),_._v(" 我们需要的只是【域名】之外更多的【"),o("strong",[_._v("分流判断依据")]),_._v("】而已。")]),_._v(" "),o("h3",{attrs:{id:"_5-1-基于指定域名分流-domain-full-等"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-基于指定域名分流-domain-full-等"}},[_._v("#")]),_._v(" 5.1 基于指定域名分流："),o("code",[_._v("[domain], [full]")]),_._v(" 等")]),_._v(" "),o("ol",[o("li",[_._v("如果需要匹配某个子域名，如 "),o("code",[_._v("a-name.yourdomain.com")]),_._v("，我们使用 "),o("code",[_._v('full: "a-name.yourdomain.com"')])]),_._v(" "),o("li",[_._v("前面的 "),o("code",[_._v("问题1")]),_._v(" 和 "),o("code",[_._v("问题2")]),_._v("，就可以通过给 "),o("code",[_._v("proxy.yourdomain.com")]),_._v(" 指定 "),o("code",[_._v("[proxy-out-vless]")]),_._v(" 出站，给 "),o("code",[_._v("direct.yourdomain.com")]),_._v(" 指定 "),o("code",[_._v("[direct-out]")]),_._v(" 出站来解决")]),_._v(" "),o("li",[_._v("如果需要匹配 "),o("code",[_._v("yourdomain.com")]),_._v(" 的所有子域名，我们使用 "),o("code",[_._v('domain: "yourdomain.com"')]),_._v(" 实现")]),_._v(" "),o("li",[_._v("上述两个可以成为两个独立的路由规则，达到某些子域名直连，其他子域名代理的配置")]),_._v(" "),o("li",[_._v("另外，"),o("code",[_._v("[domain]")]),_._v(" 还支持正则表达式等匹配方式。详情请参考 "),o("RouterLink",{attrs:{to:"/config/base/routing/"}},[_._v("《基础配置模块 - 路由》文档")])],1)]),_._v(" "),o("p",[_._v("上述配置如下：")]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        // 指定子域名直连\n        {\n            "type": "field",\n            "domain": [\n                "full:direct.yourdomain.com"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // 指定子域名转发VPS\n        {\n            "type": "field",\n            "domain": [\n                "full:proxy.yourdomain.com"\n            ],\n            "outboundTag": "proxy-out-vless"\n        },\n        // 指定泛域名转发VPS\n        {\n            "type": "field",\n            "domain": [\n                "yourdomain.com"\n            ],\n            "outboundTag": "proxy-out-vless"\n        }\n    ]\n}\n')])])]),o("h3",{attrs:{id:"_5-2-基于-ip-文件分流-geoip-dat"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-基于-ip-文件分流-geoip-dat"}},[_._v("#")]),_._v(" 5.2 基于 IP 文件分流："),o("code",[_._v("geoip.dat")])]),_._v(" "),o("p",[_._v("与 "),o("code",[_._v("geosite.dat")]),_._v(" 规则文件十分类似的，我们还有 "),o("code",[_._v("geoip.dat")]),_._v(" 这个规则文件，它致力于为用户提供成熟完善的【IP 分类表】。让用户可以简单的通过 "),o("code",[_._v("geoip:xxx")]),_._v(" 这种格式方便的调用任何子类，定制符合自身需求的路由规则 。")]),_._v(" "),o("ol",[o("li",[_._v("解决前面的 "),o("code",[_._v("[问题3], [问题4]")]),_._v("，我们使用 "),o("code",[_._v("geoip:private")]),_._v(" 类别来指定 "),o("code",[_._v("[direct-out]")])]),_._v(" "),o("li",[_._v("解决前面的 "),o("code",[_._v("[问题7]")]),_._v("，我们使用 "),o("code",[_._v("geoip:cn")]),_._v(" 类别来指定 "),o("code",[_._v("[direct-out]")])]),_._v(" "),o("li",[_._v("解决前面的 "),o("code",[_._v("[问题8]")]),_._v("，由于 "),o("code",[_._v("geoip")]),_._v(" 中没有【非中国 IP】这个分类（因为这等于要收集全世界的 IP 段），所以我们用隐藏规则代替，也就是将 "),o("code",[_._v("[proxy-out-vless]")]),_._v(" 放在第一个出站")])]),_._v(" "),o("p",[_._v("上述配置如下：")]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        // 本机内部地址、局域网地址直连\n        {\n            "type": "field",\n            "ip": [\n                "geoip:private"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // 国内IP集直连\n        {\n            "type": "field",\n            "ip": [\n                "geoip:cn"\n            ],\n            "outboundTag": "direct-out"\n        }\n    ]\n}\n')])])]),o("h3",{attrs:{id:"_5-3-基于指定-ip-地址分流"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-基于指定-ip-地址分流"}},[_._v("#")]),_._v(" 5.3 基于指定 IP 地址分流")]),_._v(" "),o("p",[_._v("与 "),o("code",[_._v("geosite.dat")]),_._v(" 规则文件十分类似的，我们还有 "),o("code",[_._v("geoip.dat")]),_._v(" 这个规则文件，它是供【路由功能】驱使的"),o("strong",[_._v("第二个神兵利器")]),_._v("，它致力于为用户提供成熟完善的【IP 分类表】。让用户可以简单的通过 "),o("code",[_._v("geoip:xxx")]),_._v(" 这种格式方便的调用任何子类，定制符合自身需求的路由规则 。")]),_._v(" "),o("ol",[o("li",[_._v("解决前面的 "),o("code",[_._v("[问题5]")]),_._v("，我们使用 "),o("code",[_._v('ip: "223.5.5.5"')]),_._v(" 来指定 "),o("code",[_._v("[direct-out]")])]),_._v(" "),o("li",[_._v("解决前面的 "),o("code",[_._v("[问题6]")]),_._v("，我们使用 "),o("code",[_._v('ip: "1.1.1.1"')]),_._v(" 来指定 "),o("code",[_._v("[proxy-out-vless]")])])]),_._v(" "),o("p",[_._v("上述配置如下：")]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        // 指定IP地址直连\n        {\n            "type": "field",\n            "ip": [\n                "223.5.5.5"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // 指定IP地址转发VPS\n        {\n            "type": "field",\n            "ip": [\n                "1.1.1.1"\n            ],\n            "outboundTag": "proxy-out-vless"\n        }\n    ]\n}\n')])])]),o("h3",{attrs:{id:"_5-4-基于协议类型分流-protocol-等"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-基于协议类型分流-protocol-等"}},[_._v("#")]),_._v(" 5.4 基于协议类型分流："),o("code",[_._v("[protocol]")]),_._v(" 等")]),_._v(" "),o("ol",[o("li",[_._v("解决前面的 "),o("code",[_._v("[问题9]")]),_._v("，我们使用 "),o("code",[_._v('"protocol": ["bittorrent"]')]),_._v(" 类别来指定 "),o("code",[_._v("[direct-out]")])])]),_._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),o("p",[_._v("你需要打开入站代理中的 "),o("code",[_._v("sniffing")]),_._v(" 才能使用此种方式分流。")])]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        // 指定 BT 协议直连\n        {\n            "type": "field",\n            "protocol": [\n                "bittorrent"\n            ],\n            "outboundTag": "direct-out"\n        }\n    ]\n}\n')])])]),o("h3",{attrs:{id:"_5-5-基于更多条件的分流"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-基于更多条件的分流"}},[_._v("#")]),_._v(" 5.5 基于更多条件的分流")]),_._v(" "),o("p",[_._v("到目前位置，我们仍然只讲了【路由功能】分流能力的冰山一角！因为它还支持很多其他的判断条件！我在此简单罗列如下：")]),_._v(" "),o("p",[_._v("本文已经讲过的：")]),_._v(" "),o("ul",[o("li",[o("code",[_._v("inboundTag")])]),_._v(" "),o("li",[o("code",[_._v("domain")])]),_._v(" "),o("li",[o("code",[_._v("ip")])]),_._v(" "),o("li",[o("code",[_._v("protocol")])])]),_._v(" "),o("p",[_._v("本文尚未讲到的：")]),_._v(" "),o("ul",[o("li",[o("code",[_._v("port")])]),_._v(" "),o("li",[o("code",[_._v("sourcePort")])]),_._v(" "),o("li",[o("code",[_._v("network")])]),_._v(" "),o("li",[o("code",[_._v("source")])]),_._v(" "),o("li",[o("code",[_._v("user")])]),_._v(" "),o("li",[o("code",[_._v("attrs")])])]),_._v(" "),o("p",[_._v("但这些内容实在是过多，全部展开就远远不是 "),o("code",[_._v("level-1")]),_._v(" 的内容了，所以，需要这些复杂条件的朋友，请仔细阅读 "),o("RouterLink",{attrs:{to:"/config/base/routing/"}},[_._v("《基础配置模块 - 路由》文档")]),_._v(" 自学哦！有问题就去 TG 群里面问问吧！")],1),_._v(" "),o("h2",{attrs:{id:"_6-霸业初定-路由规则整体回顾"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-霸业初定-路由规则整体回顾"}},[_._v("#")]),_._v(" 6. “霸业初定”：路由规则整体回顾")]),_._v(" "),o("p",[_._v("到现在为止，我们已经累积出了一套战略雄伟、战术精准的路由规则，为了避免混乱，现在就对它进行一次完整的整理和回顾。")]),_._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),o("p",[_._v("路由生效的顺序是：【从上往下，依次判断】，所以我一般推荐的规则顺序是：")]),_._v(" "),o("p",[o("code",[_._v("[1-block] --\x3e [2-direct] --\x3e [3-proxy] --\x3e [4-first-outbound]")])])]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        // [1-block 广告流量屏蔽]\n        // 1.1  广告域名集屏蔽\n        {\n            "type": "field",\n            "domain": [\n                "geosite:category-ads-all"\n            ],\n            "outboundTag": "block"\n        },\n        // [2-direct 国内流量直连]\n        // 2.1 国内域名集、指定子域名直连\n        {\n            "type": "field",\n            "domain": [\n                "geosite:cn",\n                "full:direct.yourdomain.com"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // 2.2 本机内部地址+局域网、国内IP、指定IP直连\n        {\n            "type": "field",\n            "ip": [\n                "geoip:private",\n                "geoip:cn",\n                "223.5.5.5"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // 2.3 BT协议流量直连\n        {\n            "type": "field",\n            "protocol": [\n                "bittorrent"\n            ],\n            "outboundTag": "direct-out"\n        },\n        // [3-proxy 国外流量转发VPS]\n        // 3.1 国外域名集、指定子域名、指定泛域名转发VPS\n        {\n            "type": "field",\n            "domain": [\n                "geosite:geolocation-!cn",\n                "full:proxy.yourdomain.com",\n                "yourdomain.com"\n            ],\n            "outboundTag": "proxy-out-vless"\n        },\n        // 3.2 指定IP转发VPS\n        {\n            "type": "field",\n            "ip": [\n                "1.1.1.1"\n            ],\n            "outboundTag": "proxy-out-vless"\n        }\n        // [4-default-routing 第一条出站]\n        // 没有匹配到任何规则的流量，默认使用第一条出站处理\n    ]\n}\n')])])]),o("p",[_._v("此时，路由规则其实变成了：")]),_._v(" "),o("Mermaid",{attrs:{id:"mermaid_64a561de",graph:_.$dataBlock.mermaid_64a561de}}),o("p",[_._v("至于第一条出站是 "),o("code",[_._v("[direct-out]")]),_._v(" 还是 "),o("code",[_._v("[proxy-out-vless]")]),_._v("，这就全看你的需求了。")]),_._v(" "),o("h2",{attrs:{id:"_7-路由配置常见错误"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-路由配置常见错误"}},[_._v("#")]),_._v(" 7. 路由配置常见错误")]),_._v(" "),o("p",[_._v("请大家注意看，我上面每一条路由规则，都是一个独立的匹配依据，只有这样才能确保生效。而新人在自定义路由规则时常犯的一个错误就是："),o("strong",[_._v("在一条规则内同时匹配了多种不同的匹配依据，造成匹配无效。")])]),_._v(" "),o("p",[_._v("比如，他希望实现的配置是：")]),_._v(" "),o("ol",[o("li",[_._v("自己的 "),o("code",[_._v("direct.yourdomain.com")]),_._v(" 直连")]),_._v(" "),o("li",[_._v("国内 DNS 查询（如 "),o("code",[_._v("223.5.5.5")]),_._v("）直连")])]),_._v(" "),o("h3",{attrs:{id:"_7-1-错误示范"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-错误示范"}},[_._v("#")]),_._v(" 7.1 错误示范")]),_._v(" "),o("p",[_._v("为了实现上面的目标，他写出了以下路由规则：")]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        {\n            "type": "field",\n            "ip": [\n                "223.5.5.5"\n            ],\n            "domain": [\n                "full:direct.yourdomain.com"\n            ],\n            "outboundTag": "direct-out"\n        }\n    ]\n}\n')])])]),o("p",[_._v("你能看出这里面的错误吗？乍一看，似乎是对的？")]),_._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[_._v("注意")]),_._v(" "),o("p",[o("strong",[_._v("同一个规则之内，各个依据需要同时成立，才会匹配成功")]),_._v("，逻辑关系是 "),o("code",[_._v("和")]),_._v("，而不是 "),o("code",[_._v("或")]),_._v("。")])]),_._v(" "),o("p",[_._v("换言之，这条规则的意思是：【当你访问的 "),o("code",[_._v("目标 = direct.yourdomain.com")]),_._v(", "),o("strong",[_._v("并且")]),_._v(" 同时还满足 "),o("code",[_._v("目标 = 223.5.5.5")]),_._v(" 时，"),o("code",[_._v("Xray")]),_._v(" 才会将流量转发给 "),o("code",[_._v("[direct-out]")]),_._v(" 直连出站】")]),_._v(" "),o("p",[_._v("很显然，一个目标不可能同时等于两个不同的值，所以这不但是一个永远不可能实现的无效规则，更与原本的目标风马牛不相及。")]),_._v(" "),o("h3",{attrs:{id:"_7-2-正确示范"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-正确示范"}},[_._v("#")]),_._v(" 7.2 正确示范")]),_._v(" "),o("p",[_._v("正确示范，自然就是将不同的匹配依据独立出来：")]),_._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[_._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        {\n            "type": "field",\n            "ip": [\n                "223.5.5.5"\n            ],\n            "outboundTag": "direct-out"\n        },\n        {\n            "type": "field",\n            "domain": [\n                "full:direct.yourdomain.com"\n            ],\n            "outboundTag": "direct-out"\n        }\n    ]\n}\n')])])]),o("p",[_._v("其实，第 6 点已经是我整理过的规则了，原则就是【相同的匹配依据可以合并，不同的匹配依据保持独立】。")]),_._v(" "),o("h2",{attrs:{id:"_8-明修栈道、暗渡陈仓"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-明修栈道、暗渡陈仓"}},[_._v("#")]),_._v(" 8. 明修栈道、暗渡陈仓")]),_._v(" "),o("blockquote",[o("p",[o("code",[_._v("[domain]")]),_._v(" 转化 "),o("code",[_._v("[ip]")]),_._v(" 的密道："),o("code",[_._v("domainStrategy")])])]),_._v(" "),o("p",[_._v("我们在 5.4 中提交了多种流量判断的【依据】，其中一种是域名 "),o("code",[_._v("[domain]")]),_._v("、一种是 "),o("code",[_._v("[IP]")]),_._v("。")]),_._v(" "),o("p",[_._v("如果你初步了解过 DNS 的运作过程，就会知道，我们对一个域名 "),o("code",[_._v("[domain]")]),_._v(" 发起访问请求时，其实需要先向 "),o("code",[_._v("DNS")]),_._v(" 发起请求来解析域名 "),o("code",[_._v("[domain]")]),_._v(" 对应的 "),o("code",[_._v("[IP]")]),_._v("，在得到 "),o("code",[_._v("[IP]")]),_._v(" 后再向它发起实际请求。")]),_._v(" "),o("p",[_._v("所以，面对入站的一次域名请求，"),o("code",[_._v("Xray")]),_._v(" 其实有两次机会去判断它的类型。那么，究竟是否要用这两次机会呢？这就是由 "),o("code",[_._v("domainStrategy")]),_._v(" 这个配置来决定的。它有三个选项：")]),_._v(" "),o("ul",[o("li",[o("code",[_._v("AsIs")])]),_._v(" "),o("li",[o("code",[_._v("IPIfNonMatch")])]),_._v(" "),o("li",[o("code",[_._v("IPOnDemand")])])]),_._v(" "),o("p",[_._v("按么我们逐个来解释一下：")]),_._v(" "),o("h3",{attrs:{id:"_8-1-域名策略-asis"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-域名策略-asis"}},[_._v("#")]),_._v(" 8.1 域名策略: "),o("code",[_._v('"AsIs"')])]),_._v(" "),o("p",[_._v('就是 "As Domain Is"，也就是说 【域名什么样，就什么样，不多折腾】。')]),_._v(" "),o("p",[_._v("简单粗暴理解就是说【仅用 "),o("code",[_._v("[domain]")]),_._v(" 来匹配】。")]),_._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),o("p",[o("code",[_._v("AsIs")]),_._v(" 的实际意义为 【如原先所示，不加修改】，🍉 老师这里描述的不是很恰当。")])]),_._v(" "),o("p",[_._v("这个方式的处理都在 "),o("code",[_._v("Xray")]),_._v(" 内部完成，没有与外界的数据往来，所以速度最快。它的兜底策略也很清晰：即前面所说的、无法匹配的域名自动转入第一条出站处理。所以，对于常规使用路由功能这最推荐的策略。")]),_._v(" "),o("h3",{attrs:{id:"_8-2-域名策略-ipifnonmatch"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-域名策略-ipifnonmatch"}},[_._v("#")]),_._v(" 8.2 域名策略: "),o("code",[_._v('"IPIfNonMatch"')])]),_._v(" "),o("p",[_._v('就是 "lookup IP if (there\'s) no matching rule"，也就是说【如果其他所有规则都匹配不上，那就转化成 '),o("code",[_._v("IP")]),_._v(" 去匹配 "),o("code",[_._v("IP")]),_._v(" 规则】。")]),_._v(" "),o("p",[_._v("简单粗暴理解就是说【先把访问目标和其他所有类型规则匹配，如果匹配不上，那就通过 "),o("code",[_._v("DNS")]),_._v(" 查询转化成 "),o("code",[_._v("IP")]),_._v("，再从头和所有规则匹配一次】。")]),_._v(" "),o("p",[_._v("该策略下没有命中任何规则的这一部分域名，会需要再经历 "),o("code",[_._v("DNS")]),_._v(" 查询过程、以及第二轮规则匹配的过程，其耗时会多于 "),o("code",[_._v("AsIs")]),_._v(" 策略，所以并不是首选推荐的策略。")]),_._v(" "),o("h3",{attrs:{id:"_8-3-域名策略-ipondemand"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-域名策略-ipondemand"}},[_._v("#")]),_._v(" 8.3 域名策略: "),o("code",[_._v('"IPOnDemand"')])]),_._v(" "),o("p",[_._v("这里其实说 "),o("code",[_._v("Demand IP")]),_._v(" 更准确些，也就是说【当匹配时碰到任何基于 IP 的规则，将域名立即解析为 IP 进行匹配】。")]),_._v(" "),o("p",[_._v("简单粗暴理解就是说【只要路由规则中有 "),o("code",[_._v("IP")]),_._v(" 类规则，那么所有基于域名 "),o("code",[_._v("[domain]")]),_._v(" 的请求都要解析成 "),o("code",[_._v("[IP]")]),_._v(" 然后去匹配 "),o("code",[_._v("[IP]")]),_._v(" 类规则】。")]),_._v(" "),o("p",[_._v("它要对所有首次域名访问进行 "),o("code",[_._v("DNS")]),_._v(" 解析，所以首次查询比较耗时。虽然由于 "),o("code",[_._v("Xray")]),_._v(" 中 "),o("code",[_._v("DNS")]),_._v(" 缓存机制的存在，后续对相同域名的访问速度会重回巅峰，但总体来说也不是首选推荐的策略。")]),_._v(" "),o("div",{staticClass:"custom-block warning"},[o("p",{staticClass:"custom-block-title"},[_._v("啰嗦君")]),_._v(" "),o("p",[o("code",[_._v("domainStrategy")]),_._v(" 仅对域名生效，不要搞混了哦~")])]),_._v(" "),o("h2",{attrs:{id:"_9-思考题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_9-思考题"}},[_._v("#")]),_._v(" 9. 思考题")]),_._v(" "),o("p",[_._v("迄今为止，我们都是在【单入站】和【单出站】的基础上，讲解【路由】内部的各种配置逻辑。")]),_._v(" "),o("p",[_._v("但是，如你所知，"),o("code",[_._v("Xray")]),_._v(" 本身是支持多端口，多协议的。那么，如果我问你：")]),_._v(" "),o("ol",[o("li",[_._v("我希望 "),o("code",[_._v("VLESS")]),_._v(" 协议将我日常的网页浏览和 APP 流量转发给美国的大流量服务器")]),_._v(" "),o("li",[_._v("我希望 "),o("code",[_._v("trojan")]),_._v(" 协议将我的所有 Netflix 流量转发给日本的服务器解锁各种二次元")]),_._v(" "),o("li",[_._v("我希望 "),o("code",[_._v("shadowsocks")]),_._v(" 协议将我所有的游戏流量转发给香港的服务器达到最低的延迟")]),_._v(" "),o("li",[_._v("我希望有一个独立的端口，能够把 "),o("code",[_._v("telegram")]),_._v(" 的流量全都转发给 VPS")]),_._v(" "),o("li",[_._v("我希望有一个独立的端口，能够把 "),o("code",[_._v("bittorrent")]),_._v(" 下载流量全都转发给欧洲大盘鸡")]),_._v(" "),o("li",[_._v("我希望......")])]),_._v(" "),o("p",[_._v("这些想法，是否能通过【路由】功能配置实现呢？")]),_._v(" "),o("p",[_._v("答案当然是 "),o("strong",[_._v("【完全可以】")]),_._v(" 啦！ 但是这些对于 "),o("code",[_._v("level-1")]),_._v(" 来说已经超纲了，就留给各位自由的探索吧！")]),_._v(" "),o("h2",{attrs:{id:"_10-结语"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_10-结语"}},[_._v("#")]),_._v(" 10. 结语")]),_._v(" "),o("p",[_._v("至此，"),o("code",[_._v("Xray")]),_._v(" 的【路由】功能就介绍完了。希望本文能够对你理解 "),o("code",[_._v("Xray")]),_._v(" 的灵活有所帮助。")]),_._v(" "),o("h2",{attrs:{id:"_11-尾注"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_11-尾注"}},[_._v("#")]),_._v(" 11. 尾注")]),_._v(" "),o("ul",[o("li",[_._v("现在你可以重新阅读一遍 "),o("RouterLink",{attrs:{to:"/config/routing.html"}},[_._v("路由")]),_._v("，看看是否有更加深刻的理解。")],1),_._v(" "),o("li",[_._v("🍉🍉🍉🍉🍉 😄")])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(n);v.default=n.exports}}]);