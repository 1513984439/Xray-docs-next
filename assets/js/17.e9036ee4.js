(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{416:function(t,e,_){t.exports=_.p+"assets/img/routing-lv1-img01-trio.049cebf3.png"},429:function(t,e,_){"use strict";_.r(e);var v=_(20),a=function(t){t.options.__data__block__={mermaid_382ee188:"    graph LR;\n\n    S(APP数据) .-> I[入站]\n\n    subgraph Xray\n    I --\x3e R[路由] --\x3e O[出站]\n    end\n\n    O .-> V(VPS)\n\n    V:::greyclass\n    S:::greyclass\n    R:::routingclass\n    classDef greyclass fill:#C0C0C0\n    classDef routingclass fill:#FFFFDE\n\n",mermaid_64a56ee8:'    graph LR;\n\n    S(APP数据) .-> I[入站]\n\n    subgraph Xray\n    I --\x3e R[路由] -- "geosite:category-ads-all" --\x3e O1[block]\n    R[路由] -- "geosite:cn" --\x3e O2[direct]\n    R[路由] -- "geosite:geolocation-!cn" --\x3e O3[proxy]\n\n    end\n\n    O2 .-> D(国内服务器)\n    O3 .-> V(VPS)\n\n    O1:::redclass\n    V:::greyclass\n    S:::greyclass\n    R:::routingclass\n\n    classDef redclass fill:#FF0000\n    classDef greyclass fill:#C0C0C0\n    classDef routingclass fill:#FFFFDE,stroke:#000000\n\n',mermaid_64a55fb4:'    graph LR;\n\n    S(APP数据) .-> I[入站]\n\n    subgraph Xray\n    I --\x3e R[路由] -- "geosite:category-ads-all" --\x3e O1[block]\n    R[路由] -- "geosite:cn" --\x3e O2[direct]\n    R[路由] -- "geosite:geolocation-!cn" --\x3e O3[proxy]\n    R[路由] -. "没有命中规则的流量" .-> O4[第一条出站]\n\n    end\n\n    O2 .-> D(国内服务器)\n    O3 .-> V(VPS)\n    O4 .-> V(VPS)\n\n    O1:::redclass\n    V:::greyclass\n    S:::greyclass\n    R:::routingclass\n\n    classDef redclass fill:#FF0000\n    classDef greyclass fill:#C0C0C0\n    classDef routingclass fill:#FFFFDE,stroke:#000000\n\n',mermaid_64a55a22:'    graph LR;\n\n    S(APP数据) .-> I[入站]\n\n    subgraph Xray\n    I --\x3e R[路由] -- "geosite:category-ads-all" --\x3e O1[block]\n    R[路由] -- "geosite:geolocation-!cn" --\x3e O3[proxy]\n    R[路由] -- "geosite:cn" --\x3e O2[direct]\n    R[路由] -. "没有命中规则的流量" .-> O4[第一条出站]\n\n    end\n\n    O2 .-> D(国内服务器)\n    O3 .-> V(VPS)\n    O4 .-> D\n\n    O1:::redclass\n    V:::greyclass\n    S:::greyclass\n    R:::routingclass\n    classDef redclass fill:#FF0000\n    classDef greyclass fill:#C0C0C0\n    classDef routingclass fill:#FFFFDE,stroke:#000000\n\n'}},o=Object(v.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"路由-routing-功能简析-上"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由-routing-功能简析-上"}},[t._v("#")]),t._v(" 路由 (routing) 功能简析（上）")]),t._v(" "),v("p",[t._v("如果说 Xray 的【强大】主要体现在它极致的速度和广泛的兼容性。那么 Xray 的【灵活】，则主要应该归功于它巧妙的【路由】功能。本文就稍微说明一下这个功能的逻辑以及使用方式。")]),t._v(" "),v("h2",{attrs:{id:"_1-初识【路由】三兄弟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-初识【路由】三兄弟"}},[t._v("#")]),t._v(" 1. 初识【路由】三兄弟")]),t._v(" "),v("p",[t._v("要理解路由，就要理解完整的路由功能需要有三兄弟来合力完成：1. "),v("strong",[t._v("入站")]),t._v("；2. "),v("strong",[t._v("路由")]),t._v("；3. "),v("strong",[t._v("出站")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:_(416),alt:"路由三兄弟"}})]),t._v(" "),v("p",[t._v("三兄弟桃园结义，不求同年同月同日生，但求同年同月同日死。")]),t._v(" "),v("p",[t._v("所以谨记：任何一个元素错误，就可能导致路由功能无法正常工作。")]),t._v(" "),v("p",[t._v("因为路由的灵活性非常高，只看技术文档很容易把自己绕晕，所以本文我们用几个具体的示例来逐层讲解。")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("啰嗦君")]),t._v(" "),v("p",[t._v("路由功能实在过于灵活，所以本文的示例，都是为了讲解对应的概念，实际使用时请根据自己的需求进行调整。")])]),t._v(" "),v("h2",{attrs:{id:"_2-基本功-兄弟一条心"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本功-兄弟一条心"}},[t._v("#")]),t._v(" 2. 基本功： “兄弟一条心”")]),t._v(" "),v("p",[t._v("下图的示例，就是在客户端的 "),v("code",[t._v("Xray")]),t._v(" 入站接收 APP 数据、在路由 100%转发给出站，并从出站流向 VPS。")]),t._v(" "),v("Mermaid",{attrs:{id:"mermaid_382ee188",graph:t.$dataBlock.mermaid_382ee188}}),v("p",[t._v("下面我们来逐个分析：")]),t._v(" "),v("h3",{attrs:{id:"_2-1-入站"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-入站"}},[t._v("#")]),t._v(" 2.1 入站")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[v("strong",[t._v("入站：")]),t._v(" 就是流量如何流入 "),v("code",[t._v("Xray")])])]),t._v(" "),v("p",[t._v("下面的入站配置示例，用大白话说就是：数据按照 "),v("code",[t._v("socks")]),t._v(" 协议，通过 "),v("code",[t._v("10808")]),t._v(" 端口，从本机 "),v("code",[t._v("127.0.0.1")]),t._v(" 流入"),v("code",[t._v("Xray")]),t._v("。同时，"),v("code",[t._v("Xray")]),t._v(" 将这个入站用 "),v("code",[t._v("[tag]")]),t._v(" 命名为 "),v("code",[t._v("inbound-10808")]),t._v("。")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"inbounds": [\n    {\n        "tag": "inbound-10808",\n        "protocol": "socks",\n        "listen": "127.0.0.1",\n        "port": 10808,\n        "settings": {\n            "udp": true\n        }\n    }\n]\n')])])]),v("p",[v("strong",[t._v("2.2 出站")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[v("strong",[t._v("出站：")]),t._v(" 就是流量如何流出 "),v("code",[t._v("Xray")])])]),t._v(" "),v("p",[t._v("下面的出站配置示例，用大白话说就是：数据按照 "),v("code",[t._v("VLESS")]),t._v(" 协议，以 "),v("code",[t._v("tcp + xtls (direct)")]),t._v(" 的方式、及其他相关设置，把流量发送给对应的 VPS。同时，"),v("code",[t._v("Xray")]),t._v(" 将这个出站用 "),v("code",[t._v("[tag]")]),t._v(" 命名为 "),v("code",[t._v("proxy-out-vless")]),t._v("：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"outbounds": [\n    {\n        "tag": "proxy-out-vless",\n        "protocol": "vless",\n        "settings": {\n            "vnext": [\n                {\n                    "address": "a-name.yourdomain.com",\n                    "port": 443,\n                    "users": [\n                        {\n                            "id": "uuiduuid-uuid-uuid-uuid-uuiduuiduuid",\n                            "flow": "xtls-rprx-direct",\n                            "encryption": "none",\n                            "level": 0\n                        }\n                    ]\n                }\n            ]\n        },\n        "streamSettings": {\n            "network": "tcp",\n            "security": "xtls",\n            "xtlsSettings": {\n                "serverName": "a-name.yourdomain.com"\n            }\n        }\n    }\n]\n')])])]),v("h3",{attrs:{id:"_2-3-路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-路由"}},[t._v("#")]),t._v(" 2.3 路由")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[v("strong",[t._v("路由：")]),t._v(" 就是把【入站】和【出站】之间的通道，用某种【条件】串联起来")])]),t._v(" "),v("p",[t._v("下面的路由配置示例，用大白话说就是：把所有通过 "),v("code",[t._v('[tag]="inbound-10808"')]),t._v(" 入站流入 "),v("code",[t._v("Xray")]),t._v(" 的流量，"),v("code",[t._v("100%")]),t._v(" 全部流转导入 "),v("code",[t._v('[tag]="proxy-out-vless"')]),t._v(" 的出站，没有任何分流或其他操作。")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        {\n            "type": "field",\n            "inboundTag": [\n                "inbound-10808"\n            ],\n            "outboundTag": "proxy-out-vless"\n        }\n    ]\n}\n')])])]),v("p",[t._v("至此，我们最开始设计的极简规则【客户端的 "),v("code",[t._v("Xray")]),t._v(" 入站接收 APP 数据、在路由 100%转发给出站，并从出站流向 VPS】已经完成。")]),t._v(" "),v("h3",{attrs:{id:"_2-4-路由配置项解析之一-流量筛选的依据"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-路由配置项解析之一-流量筛选的依据"}},[t._v("#")]),t._v(" 2.4 路由配置项解析之一：流量筛选的依据")]),t._v(" "),v("p",[t._v("注意观察路由配置，我们可以看到几个新名词：")]),t._v(" "),v("ol",[v("li",[v("code",[t._v('"domainStrategy": "AsIs"')])]),t._v(" "),v("li",[v("code",[t._v("“rules”")])]),t._v(" "),v("li",[v("code",[t._v('"type": "field"')])]),t._v(" "),v("li",[v("code",[t._v('"inboundTag": ["inbound-10808"]')])]),t._v(" "),v("li",[v("code",[t._v('"outboundTag": "proxy-out-vless"')])])]),t._v(" "),v("p",[t._v("其中 "),v("code",[t._v("domainStrategy")]),t._v(" 我们暂且按下不表，先简单说明后面几个：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("配置名称")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("配置值")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[t._v("配置说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v("“rules”")])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("它的内层就是【路由规则】的明细设置")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('"type"')])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('"field"')])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("该项暂时没有特别定义，但是不能省略，所以记得写上就好")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('"inboundTag"')])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('["inbound-10808"]')])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("筛选流量的 "),v("strong",[t._v("【依据】")]),t._v(" 是【入站 Tag】，具体 "),v("strong",[t._v("【条件】")]),t._v(" 现在只有一个：【入站来源是 "),v("code",[t._v("inbound-10808")]),t._v("】")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('"outboundTag"')])]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("code",[t._v('"proxy-out-vless"')])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("当上面的筛选条件成立时（即入站"),v("code",[t._v('[tag]="inbound-10808"')]),t._v("时 ），"),v("code",[t._v("Xray")]),t._v(" 会将流量导入 "),v("code",[t._v('[tag]="proxy-out-vless"')]),t._v(" 的出站")])])])]),t._v(" "),v("p",[t._v("本例中，我们只有一个入站，它的"),v("code",[t._v('"inboundTag" = "inbound-10808"')]),t._v(" 。我们也只有一个出站，它的 "),v("code",[t._v('[tag]="proxy-out-vless"')]),t._v("。所以根据上面这个路由规则，从唯一入站端口 "),v("code",[t._v("10808")]),t._v(" 流入"),v("code",[t._v("Xray")]),t._v("的流量，"),v("code",[t._v("100%")]),t._v(" 符合筛选条件、会被路由模块选中，然后转发给唯一的出站。")]),t._v(" "),v("p",[t._v("至此，"),v("strong",[t._v("入站")]),t._v("、"),v("strong",[t._v("路由")]),t._v("、"),v("strong",[t._v("出站")]),t._v(" 三兄弟就已经可以携手工作了。当然，现在这个 100%转发的工作并没有什么特别的意义。那么接下来，我们就看看这种分工合作的机制可以带来什么好处。")]),t._v(" "),v("h2",{attrs:{id:"_3-小试牛刀-三分天下-之-域名分流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-小试牛刀-三分天下-之-域名分流"}},[t._v("#")]),t._v(" 3. 小试牛刀： “三分天下” 之 “域名分流”")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("[geosite.dat]")])])]),t._v(" "),v("Mermaid",{attrs:{id:"mermaid_64a56ee8",graph:t.$dataBlock.mermaid_64a56ee8}}),v("p",[t._v("这个配置逻辑，其实就是最简单、最常用的（《小小白白话文》中也在用的）路由配置三件套：")]),t._v(" "),v("ol",[v("li",[t._v("广告流量屏蔽 "),v("code",[t._v("[block]")])]),t._v(" "),v("li",[t._v("国内流量直连 "),v("code",[t._v("[direct]")])]),t._v(" "),v("li",[t._v("国外流量转发 VPS "),v("code",[t._v("[proxy]")])])]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),v("p",[t._v("小小白白话文中的直连配置是包括【国内域名】、【国内 IP】、【本机内部 IP】的。这里先讲解【国内域名】。")])]),t._v(" "),v("h3",{attrs:{id:"_3-1-入站"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-入站"}},[t._v("#")]),t._v(" 3.1 入站")]),t._v(" "),v("p",[t._v("保持上例的 "),v("code",[t._v("inbound-10808")]),t._v(" 不变。")]),t._v(" "),v("h3",{attrs:{id:"_3-2-出站"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-出站"}},[t._v("#")]),t._v(" 3.2 出站")]),t._v(" "),v("p",[t._v("在上例的基础上，我们已经有了 "),v("code",[t._v("[proxy]")]),t._v(" 的出站 "),v("code",[t._v('"proxy-out-vless"')]),t._v("，所以它保持不变。显而易见，我们需要加入两个新的出站方式："),v("code",[t._v("[block]")]),t._v(" 和 "),v("code",[t._v("[direct]")]),t._v("，如下：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"outbounds": [\n    {\n        "tag": "proxy-out-vless",\n        ......\n    },\n    {\n        "tag": "block",\n        "protocol": "blackhole"\n    },\n    {\n        "tag": "direct-out",\n        "protocol": "freedom"\n    }\n]\n')])])]),v("p",[t._v("上面的配置用大白话翻译如下：")]),t._v(" "),v("ol",[v("li",[t._v("上例中的 "),v("code",[t._v("[proxy-out-vless]")]),t._v(" 出站配置保持不变")]),t._v(" "),v("li",[t._v("加入 "),v("strong",[v("code",[t._v("blackhole")]),t._v(" 黑洞协议")]),t._v("，通过这个协议出站的流量，其实都被发送到了 "),v("code",[t._v("Xray")]),t._v(" 内部的黑洞里，再也无法逃脱，于是效果就是屏蔽 "),v("code",[t._v("[block]")])]),t._v(" "),v("li",[t._v("加入 "),v("strong",[v("code",[t._v("freedom")]),t._v(" 自由协议")]),t._v("，通过这个协议出站的流量，是自由的离开"),v("code",[t._v("Xray")]),t._v("去寻找原定的服务器，就像从没有来过，于是效果就是直连 "),v("code",[t._v("[direct]")]),t._v(" （我这里起名叫做 "),v("code",[t._v("[direct-out]")]),t._v(" 是为了强调它是一个出站）")])]),t._v(" "),v("h3",{attrs:{id:"_3-3-路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-路由"}},[t._v("#")]),t._v(" 3.3 路由")]),t._v(" "),v("p",[t._v("接下来就是见证奇迹的时刻了，我们可以用【路由】的配置把这些连接起来！")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"routing": {\n    "domainStrategy": "AsIs",\n    "rules": [\n        {\n            "type": "field",\n            "domain": [\n                "geosite:category-ads-all"\n            ],\n            "outboundTag": "block"\n        },\n        {\n            "type": "field",\n            "domain": [\n                "geosite:cn"\n            ],\n            "outboundTag": "direct-out"\n        },\n        {\n            "type": "field",\n            "domain": [\n                "geosite:geolocation-!cn"\n            ],\n            "outboundTag": "proxy-out-vless"\n        }\n    ]\n}\n')])])]),v("p",[t._v("为了理解这个配置文件，我们要稍微解释一下这里出现的几个新配置项：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v('"domain": ["geosite:category-ads-all"]')])]),t._v(" "),v("li",[v("code",[t._v('"domain": ["geosite:cn"]')])]),t._v(" "),v("li",[v("code",[t._v('"domain": ["geosite:geolocation-!cn"]')])])]),t._v(" "),v("h3",{attrs:{id:"_3-4-简析域名文件-geosite-dat"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-简析域名文件-geosite-dat"}},[t._v("#")]),t._v(" 3.4 简析域名文件： "),v("code",[t._v("geosite.dat")])]),t._v(" "),v("p",[t._v("其实，聪明的你大概可以通过这些配置项的名称猜出来个大概：")]),t._v(" "),v("ul",[v("li",[v("code",[t._v('"domain"')]),t._v("：就是这次筛选流量的 "),v("strong",[t._v("【依据】")]),t._v(" 是 "),v("strong",[t._v("【域名】")]),t._v(" （而不再是入站 tag）")]),t._v(" "),v("li",[v("code",[t._v('"geosite"')]),t._v("：就是 "),v("code",[t._v("Xray")]),t._v(" 会去 "),v("code",[t._v("geosite.dat")]),t._v(" 文件中寻找 "),v("strong",[t._v("【符合条件的域名】")])]),t._v(" "),v("li",[v("code",[t._v('"category-ads-all"')]),t._v("：就是该文件中的 "),v("strong",[t._v("【所有广告类域名】")])]),t._v(" "),v("li",[v("code",[t._v('"cn"')]),t._v("：就是该文件中的 "),v("strong",[t._v("【中国域名】")])]),t._v(" "),v("li",[v("code",[t._v('"geolocation-!cn"')]),t._v("：就是该文件中的 "),v("strong",[t._v("【非中国域名】")])])]),t._v(" "),v("p",[t._v("结合这些说明，3.3 中的配置用大白话翻译就是：")]),t._v(" "),v("ol",[v("li",[t._v("APP 试图访问国外域名 "),v("code",[t._v('"domain": "geolocation-!cn"')]),t._v(" 的流量，通过 "),v("code",[t._v("[proxy-out-vless]")]),t._v(" 出站，转发至 VPS")]),t._v(" "),v("li",[t._v("APP 试图访问国外域名广告域名 "),v("code",[t._v('"domain": "geosite:category-ads-all"')]),t._v(" 的流量，通过 "),v("code",[t._v("[block]")]),t._v(" 出站，转发至黑洞进行屏蔽")]),t._v(" "),v("li",[t._v("APP 试图访问国内域名 "),v("code",[t._v('"domain": "geosite:cn"')]),t._v(" 的流量，通过 "),v("code",[t._v("[direct-out]")]),t._v(" 出站，自由离开完成直连")])]),t._v(" "),v("p",[t._v("这时，才让【路由功能】的好处稍微得到了一些展现。")]),t._v(" "),v("h3",{attrs:{id:"_3-5-所以-geosite-dat-到底是什么-不是有个-gfwlist-吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-所以-geosite-dat-到底是什么-不是有个-gfwlist-吗"}},[t._v("#")]),t._v(" 3.5 所以 "),v("code",[t._v("geosite.dat")]),t._v(" 到底是什么？不是有个 "),v("code",[t._v("GFWList")]),t._v(" 吗？")]),t._v(" "),v("p",[t._v("你想，这世界上的域名何止千万，如果我们每写一个基于【域名】匹配的路由规则，都要自己收集、手动输入域名，那效率将会何其低下！")]),t._v(" "),v("p",[t._v("而如果所有的域名都只有一个种类，"),v("code",[t._v("[direct], [proxy], [block]")]),t._v(" 只能三选其一，那又是多么的不方便！")]),t._v(" "),v("p",[t._v("就如关羽需要他的青龙偃月刀，"),v("code",[t._v("geosite.dat")]),t._v(" 文件便作为【路由功能】驱使的神兵利器横空出世了，它致力于为用户提供成熟完善的【域名分类表】。让用户可以简单的通过 "),v("code",[t._v("geosite:xxx")]),t._v(" 这种格式方便的调用任何子类，定制符合自身需求的路由规则。")]),t._v(" "),v("p",[t._v("这种模块化结构提供的灵活性，其实远超传统的一揽子防火墙域名列表 "),v("a",{attrs:{href:"https://github.com/gfwlist/gfwlist",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("GFWList")]),v("OutboundLink")],1),t._v("。为什么这么说呢？比如，你可以指定苹果的域名 "),v("code",[t._v("geosite:apple")]),t._v(" 和 icloud 相关域名 "),v("code",[t._v("geosite:icloud")]),t._v(" 通过代理 "),v("code",[t._v("[proxy]")]),t._v("，但是苹果的软件域名 "),v("code",[t._v("geosite:apple-update")]),t._v(" 保持直连 "),v("code",[t._v("[direct]")]),t._v(" 来保持最大下载速度。")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),v("p",[v("strong",[t._v("注意：")]),t._v(" 现在，"),v("code",[t._v("geosite.dat")]),t._v(" 文件其实有多种选择：")]),t._v(" "),v("p",[t._v("最初，从 "),v("code",[t._v("Victoria Raymond")]),t._v(" 主力维护 "),v("code",[t._v("Project V")]),t._v(" 项目时期，便提供了最初的配套项目："),v("a",{attrs:{href:"https://github.com/v2ray/domain-list-community",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("domain-list-community")]),v("OutboundLink")],1),t._v("，用来收集、沉淀、分类各种常用的域名类型；")]),t._v(" "),v("p",[t._v("之后，随着 V 姐突然消失导致 "),v("code",[t._v("Project V")]),t._v(" 的原项目开发陷入停滞，"),v("code",[t._v("v2fly")]),t._v(" 社区维护并持续更新了社区版本的 "),v("a",{attrs:{href:"https://github.com/v2fly/domain-list-community",target:"_blank",rel:"noopener noreferrer"}},[v("code",[t._v("domain-list-community")]),v("OutboundLink")],1),t._v("；")]),t._v(" "),v("p",[t._v("同时，"),v("a",{attrs:{href:"Loyalsoldier"}},[t._v("@Loyalsoldier")]),t._v(" 维护了其个人修改增强的路由规则文件 "),v("a",{attrs:{href:"https://github.com/Loyalsoldier/v2ray-rules-dat",target:"_blank",rel:"noopener noreferrer"}},[t._v("v2ray-rules-dat"),v("OutboundLink")],1),t._v("，提供了诸多不同的选择和分类逻辑；")]),t._v(" "),v("p",[t._v("另外，"),v("code",[t._v("Project X")]),t._v(" 也计划于未来定制维护更适合 "),v("code",[t._v("Xray")]),t._v(" 使用的路由规则文件 "),v("a",{attrs:{href:"https://github.com/XTLS/Xray-rules-dat",target:"_blank",rel:"noopener noreferrer"}},[t._v("Xray-rules-dat"),v("OutboundLink")],1),t._v("。"),v("s",[t._v("(你们看，文件夹都建好了，所以快了快了)")])]),t._v(" "),v("p",[t._v("甚至，你还可以定制自己的 "),v("code",[t._v("geosite")]),t._v(" 文件，外挂给 "),v("code",[t._v("Xray")]),t._v(" 使用，但是这个就跑题了，本文不展开。")]),t._v(" "),v("p",[t._v("如果你发现有些你遇到的域名没有被合理分类，请向上面的项目们提出 "),v("code",[t._v("issue")]),t._v(" 甚至提交 "),v("code",[t._v("Pull Request")]),t._v(" 吧！社区列表社区维护，人人为我我为人人！")])]),t._v(" "),v("h3",{attrs:{id:"_3-6-军师锦囊藏奇兵-一条隐藏的路由规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-军师锦囊藏奇兵-一条隐藏的路由规则"}},[t._v("#")]),t._v(" 3.6 军师锦囊藏奇兵：一条隐藏的路由规则")]),t._v(" "),v("p",[t._v("事实上，当你认真思考上面的规则，不难发现一个问题，我们的所有规则都只规定了【当入站流量 "),v("strong",[t._v("符合某种条件时")]),t._v(" 应该被转发给哪个出站】，那么，如果 "),v("code",[t._v("geosite.dat")]),t._v(" 文件不全面，我们的入站流量【"),v("strong",[t._v("不符合任何条件时")]),t._v("】，"),v("code",[t._v("Xray")]),t._v(" 会怎么处理呢？")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),v("p",[t._v("如果你认为【不符合条件当然就无法连接啦！】的话，你可要重新思考一下哦。因为只有指定了 "),v("code",[t._v("[block]")]),t._v(" 规则，才会被导入到 "),v("code",[t._v("blackhole")]),t._v(" 黑洞协议从而阻断连接")])]),t._v(" "),v("p",[t._v("事实上，"),v("code",[t._v("Xray")]),t._v(" 为了避免路由规则不完全导致的规则混乱，已经贴心的提供了一条隐藏的路由规则：【"),v("strong",[t._v("当入站流量不符合任何条件时，转发给第一个出站")]),t._v(" 】")]),t._v(" "),v("p",[t._v("这样，就不会有任何流量被漏掉了。所以，你一定要把你最信赖的心腹大将放在【第一条出站】，让它为你守城护池。")]),t._v(" "),v("h3",{attrs:{id:"_3-7-再看-三分天下-的大地图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-再看-三分天下-的大地图"}},[t._v("#")]),t._v(" 3.7 再看“三分天下”的大地图")]),t._v(" "),v("p",[t._v("因为我们在前面的示例中把 "),v("code",[t._v("[proxy-out-vless]")]),t._v(" 放在了出站的第一位，所以隐藏规则生效时，流量会通过 "),v("code",[t._v("VLESS")]),t._v(" 协议被转发至远端的 VPS。因此，"),v("code",[t._v("Xray")]),t._v(" 此时的完整工作逻辑如下：")]),t._v(" "),v("Mermaid",{attrs:{id:"mermaid_64a55fb4",graph:t.$dataBlock.mermaid_64a55fb4}}),v("p",[t._v("事实上，这就是传统所谓的 "),v("strong",[t._v("【默认科学上网、国内网站白名单直连】")]),t._v(" 的配置。")]),t._v(" "),v("h2",{attrs:{id:"_4-三分天下-之-蜀魏争雄"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-三分天下-之-蜀魏争雄"}},[t._v("#")]),t._v(" 4. “三分天下” 之 “蜀魏争雄”")]),t._v(" "),v("p",[t._v("现在，你已经知道了隐藏的默认路由规则：【"),v("strong",[t._v("当入站流量不符合任何条件时，转发给第一个出站")]),t._v(" 】。这时候，你应该能看出来，究竟是【科学上网】为王，还是【直连】称霸，全看你的第一条出站是什么！")]),t._v(" "),v("p",[t._v("上一步我们已经配置出了 "),v("strong",[t._v("【默认科学上网、国内网站白名单直连】")]),t._v(" 的规则。那么现在只要 "),v("strong",[t._v("【把直连规则放在第一位】")]),t._v("，就立即变成了正好相反的 "),v("strong",[t._v("【默认直连、国外网站白名单科学上网】")]),t._v(" 规则。")]),t._v(" "),v("p",[t._v("是不是，非常的简单？")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('"outbounds": [\n    {\n        "tag": "direct-out",\n        "protocol": "freedom"\n    },\n    {\n        "tag": "proxy-out-vless",\n        ......\n    },\n    {\n        "tag": "block",\n        "protocol": "blackhole"\n    }\n]\n')])])]),v("p",[t._v("此时，路由规则其实变成了：")]),t._v(" "),v("Mermaid",{attrs:{id:"mermaid_64a55a22",graph:t.$dataBlock.mermaid_64a55a22}}),v("p",[t._v("这就是路由功能的灵活之处了，你可以自由的改变它的顺序来实现不同的设计。")]),t._v(" "),v("p",[t._v("至此，我们已经解释完了 "),v("strong",[t._v("【如何利用 "),v("code",[t._v("geosite.dat")]),t._v(" 文件，通过路由规则，根据【域名】来分流网络流量】。")])]),t._v(" "),v("h2",{attrs:{id:"_5-攻城略池-多种路由匹配条件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-攻城略池-多种路由匹配条件"}},[t._v("#")]),t._v(" 5. 攻城略池 - 多种路由匹配条件")]),t._v(" "),v("p",[t._v("请确保你已经读懂了上面的内容，因为这样，你就已经理解了【路由】功能的工作逻辑。有了这个基础，我们就可以继续分析【路由】功能更多更详细的配置方式和匹配条件了。")]),t._v(" "),v("p",[t._v("等你看完后面的内容，就完全可以自由的定制属于自己的路由规则啦！还等什么，让我们一起进入 "),v("a",{attrs:{href:"./routing-lv1-part2"}},[t._v("《路由 (routing) 功能简析（下）》")]),t._v(" 吧！")])],1)}),[],!1,null,null,null);"function"==typeof a&&a(o);e.default=o.exports}}]);