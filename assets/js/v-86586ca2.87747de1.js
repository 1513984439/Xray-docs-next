(self.webpackChunkXray_docs_next=self.webpackChunkXray_docs_next||[]).push([[8512],{7633:(n,l,s)=>{"use strict";s.r(l),s.d(l,{data:()=>e});const e={key:"v-86586ca2",path:"/document/level-0/ch08-xray-clients.html",title:"【第 8 章】Xray 客户端篇",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"8.1 Xray 的工作原理简述",slug:"_8-1-xray-的工作原理简述",children:[]},{level:2,title:"8.2 客户端与服务器端正确连接",slug:"_8-2-客户端与服务器端正确连接",children:[]},{level:2,title:"8.3 附加题 1：在 PC 端手工配置 xray-core",slug:"_8-3-附加题-1-在-pc-端手工配置-xray-core",children:[]},{level:2,title:"8.4 附加题 2：在 PC 端手工运行 xray-core",slug:"_8-4-附加题-2-在-pc-端手工运行-xray-core",children:[]},{level:2,title:"8.5 附加题 3：在 PC 端开机自动运行 xray-core",slug:"_8-5-附加题-3-在-pc-端开机自动运行-xray-core",children:[]},{level:2,title:"8.6 圆满完成！",slug:"_8-6-圆满完成",children:[]},{level:2,title:"8.7 TO INFINITY AND BEYOND!",slug:"_8-7-to-infinity-and-beyond",children:[]}],filePathRelative:"document/level-0/ch08-xray-clients.md",git:{updatedTime:1617517861e3,contributors:[]}}},8390:(n,l,s)=>{"use strict";s.r(l),s.d(l,{default:()=>Bn});var e=s(6252);const a=s.p+"assets/img/ch08-img01-flow.943d902c.png",u=s.p+"assets/img/ch08-img02-buzz.aec807b9.png",r=(0,e.Wm)("h1",{id:"【第-8-章】xray-客户端篇"},[(0,e.Wm)("a",{class:"header-anchor",href:"#【第-8-章】xray-客户端篇"},"#"),(0,e.Uk)(" 【第 8 章】Xray 客户端篇")],-1),o=(0,e.Wm)("h2",{id:"_8-1-xray-的工作原理简述"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-1-xray-的工作原理简述"},"#"),(0,e.Uk)(" 8.1 Xray 的工作原理简述")],-1),t=(0,e.Wm)("p",null,[(0,e.Uk)("要正确的配置和使用"),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)("，就需要正确的理解其工作原理，对于新人，可以先看看下面简化的示意图（省略了许多复杂的设置）：")],-1),p=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:a,alt:"Xray数据流向"})],-1),m=(0,e.Wm)("p",null,"这其中的关键点是：",-1),c=(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("APP 要主动或借助转发工具，将数据【流入("),(0,e.Wm)("code",null,"inbounds"),(0,e.Uk)(")】"),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 客户端")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("流量进入客户端后，会被【客户端路由("),(0,e.Wm)("code",null,"routing"),(0,e.Uk)(")】按规则处理后，向不同方向【流出"),(0,e.Wm)("code",null,"(outbounds)"),(0,e.Uk)("】"),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 客户端。比如：")]),(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Uk)("国内流量直连（"),(0,e.Wm)("code",null,"direct"),(0,e.Uk)("）")]),(0,e.Wm)("li",null,[(0,e.Uk)("国外流量转发 VPS（"),(0,e.Wm)("code",null,"proxy"),(0,e.Uk)("）")]),(0,e.Wm)("li",null,[(0,e.Uk)("广告流量屏蔽（"),(0,e.Wm)("code",null,"block"),(0,e.Uk)("）")])])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("向 VPS 转发的国外流量，会跨过防火墙，【流入("),(0,e.Wm)("code",null,"inbounds"),(0,e.Uk)(")】 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 服务器端")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("流量进入服务器端后，与客户端一样，会被【服务器端路由("),(0,e.Wm)("code",null,"routing"),(0,e.Uk)(")】按规则处理后，向不同方向【流出"),(0,e.Wm)("code",null,"(outbounds)"),(0,e.Uk)("】：")]),(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Uk)("因为已经在防火墙之外，所以流量默认直连，你就可以访问到不存在网站们了（"),(0,e.Wm)("code",null,"direct"),(0,e.Uk)("）")]),(0,e.Wm)("li",null,[(0,e.Uk)("如果需要在不同的 VPS 之间做链式转发，就可以继续配置转发规则（"),(0,e.Wm)("code",null,"proxy"),(0,e.Uk)("）")]),(0,e.Wm)("li",null,[(0,e.Uk)("你可以在服务器端继续禁用各种你想禁用的流量，如广告、BT 下载等（"),(0,e.Wm)("code",null,"block"),(0,e.Uk)("）")])])])],-1),i={class:"custom-container warning"},b=(0,e.uE)('<p class="custom-container-title">注意</p><p><strong>注意：</strong> 请务必记得，<code>Xray</code> 的路由配置非常灵活，上面的说明只是无限可能性中的一种。</p><p>借助 <code>geosite.dat</code> 和 <code>geoip.dat</code> 这两个文件，可以很灵活的从【域名】和【IP】这两个角度、不留死角的控制流量流出的方向。这比曾经单一笼统的 <code>GFWList</code> 强大很多很多，可以做到非常细致的微调：比如可以指定 Apple 域名直连或转发、指定亚马逊域名代理或转发，百度的域名屏蔽等等。。。）</p>',3),d=(0,e.Uk)("现在，"),W=(0,e.Uk)("《路由 (routing) 功能简析》"),q=(0,e.Uk)(" 已经上线，我建议对路由功能有兴趣的同学，先继续跟着本文完成客户端的基础配置，之后再去这里详细学习。"),k=(0,e.Wm)("h2",{id:"_8-2-客户端与服务器端正确连接"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-2-客户端与服务器端正确连接"},"#"),(0,e.Uk)(" 8.2 客户端与服务器端正确连接")],-1),U=(0,e.Wm)("p",null,[(0,e.Uk)("现在你已经理解了 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 的工作原理，那么接下来的配置，其实就是【告诉你的客户端如何连接 VPS 服务器】。这和你已经很熟悉的、告诉"),(0,e.Wm)("code",null,"PuTTY"),(0,e.Uk)("如何远程连接服务器是一样的。只不过 Xray 连接时的要素不止是【IP 地址】+【端口】+【用户名】+【密码】这四要素了。")],-1),g=(0,e.Uk)("实际上，"),y=(0,e.Wm)("code",null,"Xray",-1),h=(0,e.Uk)("的连接要素是由不同的"),x=(0,e.Uk)("协议"),f=(0,e.Uk)("决定的。本文在第 7 章的配置文件 "),v=(0,e.Wm)("code",null,"config.json",-1),_=(0,e.Uk)(" 里，我们使用 "),X=(0,e.Wm)("code",null,"Xray",-1),S=(0,e.Uk)(" 下独特而强大的 "),w=(0,e.Wm)("code",null,"VLESS",-1),P=(0,e.Uk)(" 协议 + "),N=(0,e.Wm)("code",null,"XTLS",-1),I=(0,e.Uk)(" 流控。所以看看那个配置文件的内容就能知道，这个协议组合的连接要素有："),T=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("服务器【地址】: "),(0,e.Wm)("code",null,"a-name.yourdomain.com")]),(0,e.Wm)("li",null,[(0,e.Uk)("服务器【端口】: "),(0,e.Wm)("code",null,"443")]),(0,e.Wm)("li",null,[(0,e.Uk)("连接的【协议】: "),(0,e.Wm)("code",null,"vless")]),(0,e.Wm)("li",null,[(0,e.Uk)("连接的【流控】: "),(0,e.Wm)("code",null,"xtls-rprx-direct"),(0,e.Uk)(" (direct 模式适合全平台，若是 Linux/安卓用户，可改成 "),(0,e.Wm)("code",null,"xtls-rprx-splice"),(0,e.Uk)(" 性能全开)")]),(0,e.Wm)("li",null,[(0,e.Uk)("连接的【验证】: "),(0,e.Wm)("code",null,"uuiduuid-uuid-uuid-uuiduuiduuid")]),(0,e.Wm)("li",null,[(0,e.Uk)("连接的【安全】: "),(0,e.Wm)("code",null,'"allowInsecure": false')])],-1),C=(0,e.Wm)("p",null,"鉴于新人一般都会使用手机 APP 或者电脑的 GUI 客户端，我就把常用的客户端罗列在下面。每个客户端都有自己独特的配置界面，逐一截图展示并不现实，所以请你务必仔细阅读这些客户端的说明、然后把上述要素填入合适的地方即可。",-1),L=(0,e.Wm)("div",{class:"custom-container warning"},[(0,e.Wm)("p",{class:"custom-container-title"},"注意"),(0,e.Wm)("p",null,[(0,e.Uk)("许多工具其实是同时支持 "),(0,e.Wm)("code",null,"xray-core"),(0,e.Uk)(" 和 "),(0,e.Wm)("code",null,"v2fly-core"),(0,e.Uk)(" 的，但默认内置的不一定是哪个，所以别忘记检查一下是否是你想要的那个在工作哦！")])],-1),O=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"v2rayN - 适用于 Windows 平台")],-1),D=(0,e.Uk)("请从它的"),A={href:"https://github.com/2dust/v2rayN/releases",target:"_blank",rel:"noopener noreferrer"},G=(0,e.Uk)("GitHub 仓库 Release 页面"),E=(0,e.Uk)("获取最新版"),j=(0,e.Wm)("li",null,"请根据该客户端的说明进行设置",-1),V=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"v2rayNG - 适用于 Android 平台")],-1),R=(0,e.Uk)("请从它的"),Y={href:"https://github.com/2dust/v2rayNG/releases",target:"_blank",rel:"noopener noreferrer"},H=(0,e.Uk)("GitHub 仓库 Release 页面"),Q=(0,e.Uk)("获取最新版"),F=(0,e.Wm)("li",null,"请根据该客户端的说明进行设置",-1),B=(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"Shadowrocket - 适用于 iOS, 基于苹果 M 芯片的 macOS")]),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"你需要注册一个【非中国区】的 iCloud 账户"),(0,e.Wm)("li",null,"你需要通过 App Store 搜索并购买"),(0,e.Wm)("li",null,"请根据该客户端的说明进行设置")])],-1),z=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"Qv2ray - 跨平台图形界面，适用于 Linux, Windows, macOS")],-1),M=(0,e.Uk)("请从它的"),$={href:"https://github.com/Qv2ray/Qv2ray/releases",target:"_blank",rel:"noopener noreferrer"},J=(0,e.Uk)("GitHub 仓库 Release 页面"),K=(0,e.Uk)("获取最新版（还可以从它的"),Z={href:"https://github.com/Qv2ray/Qv2ray/actions",target:"_blank",rel:"noopener noreferrer"},nn=(0,e.Uk)("GitHub 自动构建仓库"),ln=(0,e.Uk)("寻找更新的版本）"),sn=(0,e.Uk)("请从它的"),en={href:"https://qv2ray.net/",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Uk)("项目主页"),un=(0,e.Uk)("学习文档"),rn=(0,e.Wm)("li",null,"请根据该客户端的说明进行设置",-1),on=(0,e.Wm)("p",null,"到这一步，你的全套配置就已经可以正常使用啦！",-1),tn=(0,e.Wm)("h2",{id:"_8-3-附加题-1-在-pc-端手工配置-xray-core"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-3-附加题-1-在-pc-端手工配置-xray-core"},"#"),(0,e.Uk)(" 8.3 附加题 1：在 PC 端手工配置 "),(0,e.Wm)("code",null,"xray-core")],-1),pn=(0,e.Wm)("p",null,[(0,e.Uk)("虽然到上面一步已经可以结束了，但是如果你是个好奇心强、记忆力好的的同学，一定会想起来我在上一章说过，你把"),(0,e.Wm)("code",null,"xray-core"),(0,e.Uk)(" 的二进制文件“放在服务器运行，它就是服务器端；你把它下载到本地电脑运行，它就是客户端。” 那究竟要怎样直接使用 "),(0,e.Wm)("code",null,"xray-core"),(0,e.Uk)(" 做客户端呢？")],-1),mn=(0,e.Wm)("p",null,"为了回答这个问题，我加入了附加题章节，有一点点超纲，有一点点麻烦，但费这个笔墨是因为这个方式有它的优势：",-1),cn=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"第一时间获得最新版而无需等待 APP 升级适配")]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"灵活自由的路由配置能力（当然 GUI 客户端中 Qv2ray 的高级路由编辑器非常强大，也可以完整实现 xray-core 的路由配置功能）")]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"节约系统资源 （GUI 界面一定会有资源消耗，消耗的多少则取决于客户端的实现）")])],-1),bn=(0,e.Wm)("p",null,"它的劣势应该就是【需要手写配置文件】有点麻烦了。但其实，你想想，服务器上你已经成功的写过一次了，现在又有什么区别呢？接下来，还是老样子，我们分解一下步骤：",-1),dn=(0,e.Uk)("首先请从 Xray 官方的 "),Wn={href:"https://github.com/XTLS/Xray-core/releases",target:"_blank",rel:"noopener noreferrer"},qn=(0,e.Uk)("GitHub 仓库 Release 页面"),kn=(0,e.Uk)(" 获取对应平台的版本，并解压缩到合适的文件夹"),Un=(0,e.uE)('<li><p>在合适的文件夹建立空白配置文件：<code>config.json</code> （自己常用平台下新建文件大家肯定都会，这就真不用啰嗦了）</p></li><li><p>至于什么是“合适的文件夹”？这就取决于具体的平台了~</p></li><li><p>填写客户端配置</p><ul><li>我就以 <code>8.1</code> 原理说明里展示的基本三类分流（国内流量直连、国际流量转发 VPS、广告流量屏蔽），结合 <code>8.2</code> 的连接要素，写成一个配置文件</li><li>请将 <code>uuid</code> 替换成与你服务器一致的 <code>uuid</code></li><li>请将 <code>address</code> 替换成你的真实域名</li><li>请将 <code>serverName</code> 替换成你的真实域名</li><li>各个配置模块的说明我都已经（很啰嗦的）放在对应的配置点上了</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// REFERENCE:\n// https://github.com/XTLS/Xray-examples\n// https://xtls.github.io/config/\n\n// 常用的config文件，不论服务器端还是客户端，都有5个部分。外加小小白解读：\n// ┌─ 1_log          日志设置 - 日志写什么，写哪里（出错时有据可查）\n// ├─ 2_dns          DNS-设置 - DNS怎么查（防DNS污染、防偷窥、避免国内外站匹配到国外服务器等）\n// ├─ 3_routing      分流设置 - 流量怎么分类处理（是否过滤广告、是否国内外分流）\n// ├─ 4_inbounds     入站设置 - 什么流量可以流入Xray\n// └─ 5_outbounds    出站设置 - 流出Xray的流量往哪里去\n\n\n{\n    // 1_日志设置\n    // 注意，本例中我默认注释掉了日志文件，因为windows, macOS, Linux 需要写不同的路径，请自行配置\n    &quot;log&quot;: {\n        // &quot;access&quot;: &quot;/home/local/xray_log/access.log&quot;,    // 访问记录\n        // &quot;error&quot;: &quot;/home/local/xray_log/error.log&quot;,    // 错误记录\n        &quot;loglevel&quot;: &quot;warning&quot;        // 内容从少到多: &quot;none&quot;, &quot;error&quot;, &quot;warning&quot;, &quot;info&quot;, &quot;debug&quot;\n    },\n\n    // 2_DNS设置\n    &quot;dns&quot;: {\n        &quot;servers&quot;: [\n            // 2.1 国外域名使用国外DNS查询\n            {\n                &quot;address&quot;: &quot;1.1.1.1&quot;,\n                &quot;domains&quot;: [\n                    &quot;geosite:geolocation-!cn&quot;\n                ]\n            },\n            // 2.2 国内域名使用国内DNS查询，并期待返回国内的IP，若不是国内IP则舍弃，用下一个查询\n            {\n                &quot;address&quot;: &quot;223.5.5.5&quot;,\n                &quot;domains&quot;: [\n                    &quot;geosite:cn&quot;\n                ],\n                &quot;expectIPs&quot;: [\n                    &quot;geoip:cn&quot;\n                ]\n            },\n            // 2.3 作为2.2的备份，对国内网站进行二次查询\n            {\n                &quot;address&quot;: &quot;114.114.114.114&quot;,\n                &quot;domains&quot;: [\n                    &quot;geosite:cn&quot;\n                ]\n            },\n            // 2.4 最后的备份，上面全部失败时，用本机DNS查询\n            &quot;localhost&quot;\n        ]\n    },\n\n    // 3_分流设置\n    // 所谓分流，就是将符合否个条件的流量，用指定`tag`的出站协议去处理（对应配置的5.x内容）\n    &quot;routing&quot;: {\n        &quot;domainStrategy&quot;: &quot;AsIs&quot;,\n        &quot;rules&quot;: [\n            // 3.1 广告域名屏蔽\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;domain&quot;: [\n                    &quot;geosite:category-ads-all&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;block&quot;\n            },\n            // 3.2 国内域名直连\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;domain&quot;: [\n                    &quot;geosite:cn&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            // 3.3 国内IP直连\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;ip&quot;: [\n                    &quot;geoip:cn&quot;,\n                    &quot;geoip:private&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;direct&quot;\n            },\n            // 3.4 国外域名代理\n            {\n                &quot;type&quot;: &quot;field&quot;,\n                &quot;domain&quot;: [\n                    &quot;geosite:geolocation-!cn&quot;\n                ],\n                &quot;outboundTag&quot;: &quot;proxy&quot;\n            }\n            // 3.5 默认规则\n            // 在Xray中，任何不符合上述路由规则的流量，都会默认使用【第一个outbound（5.1）】的设置，所以一定要把转发VPS的outbound放第一个\n        ]\n    },\n\n    // 4_入站设置\n    &quot;inbounds&quot;: [\n        // 4.1 一般都默认使用socks5协议作本地转发\n        {\n            &quot;tag&quot;: &quot;socks-in&quot;,\n            &quot;protocol&quot;: &quot;socks&quot;,\n            &quot;listen&quot;: &quot;127.0.0.1&quot;,   // 这个是通过socks5协议做本地转发的地址\n            &quot;port&quot;: 10800,           // 这个是通过socks5协议做本地转发的端口\n            &quot;settings&quot;: {\n                &quot;udp&quot;: true\n            }\n        },\n        // 4.2 有少数APP不兼容socks协议，需要用http协议做转发，则可以用下面的端口\n        {\n            &quot;tag&quot;: &quot;http-in&quot;,\n            &quot;protocol&quot;: &quot;http&quot;,\n            &quot;listen&quot;: &quot;127.0.0.1&quot;,   // 这个是通过http协议做本地转发的地址\n            &quot;port&quot;: 10801            // 这个是通过http协议做本地转发的端口\n        }\n    ],\n\n    // 5_出站设置\n    &quot;outbounds&quot;: [\n    // 5.1 默认转发VPS\n    // 一定放在第一个，在routing 3.5 里面已经说明了，这等于是默认规则，所有不符合任何规则的流量都走这个\n        {\n            &quot;tag&quot;: &quot;proxy&quot;,\n            &quot;protocol&quot;: &quot;vless&quot;,\n            &quot;settings&quot;: {\n                &quot;vnext&quot;: [\n                    {\n                        &quot;address&quot;: &quot;a-name.yourdomain.com&quot;,  // 替换成你的真实域名\n                        &quot;port&quot;: 443,\n                        &quot;users&quot;: [\n                            {\n                                &quot;id&quot;: &quot;uuiduuid-uuid-uuid-uuid-uuiduuiduuid&quot;,  // 和服务器端的一致\n                                &quot;flow&quot;: &quot;xtls-rprx-direct&quot;,       // Windows, macOS 同学保持这个不变\n                                // &quot;flow&quot;: &quot;xtls-rprx-splice&quot;,    // Linux和安卓同学请改成Splice性能更强\n                                &quot;encryption&quot;: &quot;none&quot;,\n                                &quot;level&quot;: 0\n                            }\n                        ]\n                    }\n                ]\n            },\n            &quot;streamSettings&quot;: {\n                &quot;network&quot;: &quot;tcp&quot;,\n                &quot;security&quot;: &quot;xtls&quot;,\n                &quot;xtlsSettings&quot;: {\n                    &quot;serverName&quot;: &quot;a-name.yourdomain.com&quot;,  // 替换成你的真实域名\n                    &quot;allowInsecure&quot;: false  // 禁止不安全证书\n                }\n            }\n        },\n        // 5.2 用`freedom`协议直连出站，即当routing中指定&#39;direct&#39;流出时，调用这个协议做处理\n        {\n            &quot;tag&quot;: &quot;direct&quot;,\n            &quot;protocol&quot;: &quot;freedom&quot;\n        },\n        // 5.3 用`blackhole`协议屏蔽流量，即当routing中指定&#39;block&#39;时，调用这个协议做处理\n        {\n            &quot;tag&quot;: &quot;block&quot;,\n            &quot;protocol&quot;: &quot;blackhole&quot;\n        }\n    ]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br></div></div></li>',3),gn=(0,e.Wm)("h2",{id:"_8-4-附加题-2-在-pc-端手工运行-xray-core"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-4-附加题-2-在-pc-端手工运行-xray-core"},"#"),(0,e.Uk)(" 8.4 附加题 2：在 PC 端手工运行 "),(0,e.Wm)("code",null,"xray-core")],-1),yn=(0,e.Wm)("p",null,[(0,e.Uk)("写好了配置文件该，要怎么让 "),(0,e.Wm)("code",null,"xray-core"),(0,e.Uk)(" 运行起来呢？双击好像并没有反应啊？")],-1),hn=(0,e.Wm)("p",null,"首先，你要找到电脑上的【命令行界面】。",-1),xn=(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Uk)("Linux 桌面、macOS 系统的同学肯定已经比较熟悉了，搜索 "),(0,e.Wm)("code",null,"Console"),(0,e.Uk)(" 或者 "),(0,e.Wm)("code",null,"Terminal"),(0,e.Uk)(" 就可以")]),(0,e.Wm)("li",null,[(0,e.Uk)("Windows 就可以搜索使用 "),(0,e.Wm)("code",null,"Cmd"),(0,e.Uk)(" 或者 "),(0,e.Wm)("code",null,"Powershell"),(0,e.Uk)(" 等程序（WSL 的同学你坐下，你的 "),(0,e.Wm)("code",null,"Console"),(0,e.Uk)(" 当然也可以）")])],-1),fn=(0,e.Wm)("p",null,[(0,e.Uk)("其次，我们要做的事情是【让 "),(0,e.Wm)("code",null,"xray"),(0,e.Uk)(" 找到并读取配置文件 "),(0,e.Wm)("code",null,"config.json"),(0,e.Uk)("，然后运行】，所以：")],-1),vn=(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("在 Windows 下，假设你的 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 程序位置是 "),(0,e.Wm)("code",null,"C:\\Xray-windows-64\\xray.exe"),(0,e.Uk)("，配置文件位置是"),(0,e.Wm)("code",null,"C:\\Xray-windows-64\\config.json"),(0,e.Uk)("，那么正确的启动命令就是：")]),(0,e.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-text"},[(0,e.Wm)("code",null,"C:\\Xray-windows-64\\xray.exe -c C:\\Xray-windows-64\\config.json\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])]),(0,e.Wm)("div",{class:"custom-container tip"},[(0,e.Wm)("p",{class:"custom-container-title"},"说明"),(0,e.Wm)("p",null,[(0,e.Uk)("这里的 "),(0,e.Wm)("code",null,"-c"),(0,e.Uk)(" 就是指定配置文件路径的参数，告诉 "),(0,e.Wm)("code",null,"xray"),(0,e.Uk)(" 去后面的位置找配置文件")])])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Uk)("相似的，在 Linux 和 macOS 下，假设你的 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 程序位置是 "),(0,e.Wm)("code",null,"/usr/local/bin/xray"),(0,e.Uk)("，配置文件位置是"),(0,e.Wm)("code",null,"/usr/local/etc/xray/config.json"),(0,e.Uk)("，那么正确的启动命令就是")]),(0,e.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-text"},[(0,e.Wm)("code",null,"$ /usr/local/bin/xray -c /usr/local/etc/xray/config.json\n")]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br")])]),(0,e.Wm)("div",{class:"custom-container tip"},[(0,e.Wm)("p",{class:"custom-container-title"},"说明"),(0,e.Wm)("p",null,[(0,e.Uk)("每个系统都有系统路径变量，所以写 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 程序时不一定要写绝对路径。但是写了肯定没错，所以我就如此演示了。")])])])],-1),_n=(0,e.Wm)("h2",{id:"_8-5-附加题-3-在-pc-端开机自动运行-xray-core"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-5-附加题-3-在-pc-端开机自动运行-xray-core"},"#"),(0,e.Uk)(" 8.5 附加题 3：在 PC 端开机自动运行 "),(0,e.Wm)("code",null,"xray-core")],-1),Xn=(0,e.Wm)("p",null,[(0,e.Uk)("如果你真的尝试了手动运行 "),(0,e.Wm)("code",null,"xray-core"),(0,e.Uk)("，你一定会发现这个方式还有点小问题：")],-1),Sn=(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Uk)("每次运行 "),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)(" 都要出现一个黑乎乎的窗口，很丑")]),(0,e.Wm)("li",null,"不能开机自动运行，每次都要手工输入，十分不方便")],-1),wn=(0,e.Wm)("p",null,[(0,e.Uk)("我可以肯定的告诉你："),(0,e.Wm)("strong",null,"完全可以解决"),(0,e.Uk)("。但是具体的解决方式，就当作课外作业留给大家吧！（友情提示，文档站的问答区有线索哦）")],-1),Pn=(0,e.Wm)("h2",{id:"_8-6-圆满完成"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-6-圆满完成"},"#"),(0,e.Uk)(" 8.6 圆满完成！")],-1),Nn=(0,e.Wm)("p",null,[(0,e.Uk)("我相信，有耐心看到这里的同学，都是兼具好奇心和行动力的学习派！我现在要郑重的恭喜你，因为到了这里，你已经完完整整的【"),(0,e.Wm)("strong",null,"从第一条命令开始，完成了 VPS 服务器部署，并成功的在客户端配置使用 Xray"),(0,e.Uk)("】了！这毫无疑问是一个巨大的胜利！")],-1),In=(0,e.Wm)("p",null,[(0,e.Uk)("我相信，你现在一定对"),(0,e.Wm)("code",null,"Linux"),(0,e.Uk)("不再恐惧，对"),(0,e.Wm)("code",null,"Xray"),(0,e.Uk)("不再陌生了吧！")],-1),Tn=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"至此，小小白白话文圆满结束！")],-1),Cn=(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,"⬛⬛⬛⬛⬛⬛⬛⬛ 100%")],-1),Ln=(0,e.Wm)("h2",{id:"_8-7-to-infinity-and-beyond"},[(0,e.Wm)("a",{class:"header-anchor",href:"#_8-7-to-infinity-and-beyond"},"#"),(0,e.Uk)(" 8.7 TO INFINITY AND BEYOND!")],-1),On=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,"但现在你看到的，远远不是 Xray 的全貌。")],-1),Dn=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Xray"),(0,e.Uk)("是一个强大而丰富的网络工具集合，平台化的提供了众多模块，可以像瑞士军刀一样，通过灵活的配置组合解决各种不同的问题。而本文，仅仅蜻蜓点水的用了"),(0,e.Wm)("strong",null,"最简单"),(0,e.Uk)("、"),(0,e.Wm)("strong",null,"最直观"),(0,e.Uk)("的配置来做"),(0,e.Wm)("strong",null,"基础演示"),(0,e.Uk)("。")],-1),An=(0,e.Wm)("p",null,"如果你觉得现在已经完全够用了，那就好好的享受它给你带来的信息自由。但如果你的好奇心依然不能停歇，那就去继续挖掘它无限的可能性吧！",-1),Gn=(0,e.Wm)("p",null,"需要更多信息，可以到这里寻找：",-1),En={href:"https://xtls.github.io/",target:"_blank",rel:"noopener noreferrer"},jn=(0,e.Uk)("xtls.github.io"),Vn=(0,e.Uk)(" - 官方文档站"),Rn={href:"https://t.me/projectXray",target:"_blank",rel:"noopener noreferrer"},Yn=(0,e.Uk)("官方 Telegram 群组"),Hn=(0,e.Uk)(" - 活跃而友善的官方讨论社区"),Qn=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:u,alt:"TO INFINITY AND BEYOND!"})],-1),Fn=(0,e.Wm)("div",{class:"custom-container tip"},[(0,e.Wm)("p",{class:"custom-container-title"},"不算后记的后记"),(0,e.Wm)("p",null,"希望我陪你走过的这一段小小的旅程，可以成为你网络生活中的一份小小助力。"),(0,e.Wm)("p",null,"这篇文章里的工具和信息难免会一点点的陈旧过时，但你一定会逐渐成长为大佬。未来的某个时间，若你能偶尔想起这篇教程、想起我写下本文的初衷，那我衷心希望你能够薪火相传、把最新的知识分享给后来人，让这一份小小的助力在社区里坚定的传递下去。"),(0,e.Wm)("p",null,"这是个大雪封山乌云密布的世界，人们孤独的走在各自的路上试图寻找阳光，如果大家偶尔交汇时不能守望相助互相鼓励，那最终剩下的，恐怕只有【千山鸟飞绝 万径人踪灭】的凄凉了吧。")],-1),Bn={render:function(n,l){const s=(0,e.up)("RouterLink"),a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[r,o,t,p,m,c,(0,e.Wm)("div",i,[b,(0,e.Wm)("p",null,[d,(0,e.Wm)(s,{to:"/document/level-1/routing-lv1-part1.html"},{default:(0,e.w5)((()=>[W])),_:1}),q])]),k,U,(0,e.Wm)("p",null,[g,y,h,(0,e.Wm)(s,{to:"/config/inbounds/"},{default:(0,e.w5)((()=>[x])),_:1}),f,v,_,X,S,w,P,N,I]),T,C,L,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[O,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[D,(0,e.Wm)("a",A,[G,(0,e.Wm)(a)]),E]),j])]),(0,e.Wm)("li",null,[V,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[R,(0,e.Wm)("a",Y,[H,(0,e.Wm)(a)]),Q]),F])]),B,(0,e.Wm)("li",null,[z,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[M,(0,e.Wm)("a",$,[J,(0,e.Wm)(a)]),K,(0,e.Wm)("a",Z,[nn,(0,e.Wm)(a)]),ln]),(0,e.Wm)("li",null,[sn,(0,e.Wm)("a",en,[an,(0,e.Wm)(a)]),un]),rn])])]),on,tn,pn,mn,cn,bn,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[dn,(0,e.Wm)("a",Wn,[qn,(0,e.Wm)(a)]),kn])]),Un]),gn,yn,hn,xn,fn,vn,_n,Xn,Sn,wn,Pn,Nn,In,Tn,Cn,Ln,On,Dn,An,Gn,(0,e.Wm)("ol",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",En,[jn,(0,e.Wm)(a)]),Vn]),(0,e.Wm)("li",null,[(0,e.Wm)("a",Rn,[Yn,(0,e.Wm)(a)]),Hn])]),Qn,Fn],64)}}}}]);