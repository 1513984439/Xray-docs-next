import{r as e,o as l,c as r,a,b as n,w as t,F as o,e as s,d as i}from"./app.28babbd2.js";const u={},h=a("h1",{id:"vless-协议详解",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#vless-协议详解","aria-hidden":"true"},"#"),s(" VLESS 协议详解")],-1),c=a("blockquote",null,[a("p",null,[a("strong",null,"VLESS 是原创的无状态的轻量传输协议, 也是 Xray 一切的开始")])],-1),d={id:"协议详解",tabindex:"-1"},p=a("a",{class:"header-anchor",href:"#协议详解","aria-hidden":"true"},"#",-1),b=s(" 协议详解 "),f=a("h2",{id:"配置模板",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#配置模板","aria-hidden":"true"},"#"),s(" 配置模板")],-1),g={href:"https://github.com/xtls/Xray-examples",target:"_blank",rel:"noopener noreferrer"},k=s("Xray-examples"),S=s(" 有完整的 VLESS 配置示例供参考。（但目前不能保证其它协议的配置示例质量）"),E=i('<h2 id="客户端开发指引" tabindex="-1"><a class="header-anchor" href="#客户端开发指引" aria-hidden="true">#</a> 客户端开发指引</h2><ol><li>VLESS 协议本身还会有不兼容升级，但客户端配置文件参数基本上是只增不减的。<strong>所以如果你开发了用 core 的客户端，现在就可以适配。</strong> iOS 客户端的协议实现则需紧跟升级。</li><li><strong>视觉标准：UI 标识请统一用 VLESS</strong>，而不是 VLess / Vless / vless，配置文件不受影响，代码内则顺其自然。</li><li><code>encryption</code> 应做成输入框而不是选择框，新配置的默认值应为 <code>none</code>，若用户置空则应代填 <code>none</code>。</li></ol><p><strong>以下为已支持图形化配置 VLESS 的部分客户端列表，推荐使用：</strong>（排名不分先后顺序）</p>',3),m=s("OpenWrt "),y={href:"https://github.com/xiaorouji/openwrt-passwall",target:"_blank",rel:"noopener noreferrer"},x=s("PassWall"),v={href:"https://github.com/jerrykuku/luci-app-vssr",target:"_blank",rel:"noopener noreferrer"},_=s("Hello World"),L={href:"https://github.com/fw876/helloworld",target:"_blank",rel:"noopener noreferrer"},V=s("ShadowSocksR Plus+"),w=s("Windows "),A={href:"https://github.com/2dust/v2rayN",target:"_blank",rel:"noopener noreferrer"},F=s("v2rayN"),X={href:"https://github.com/Qv2ray/Qv2ray",target:"_blank",rel:"noopener noreferrer"},D=s("Qv2ray"),W=s("Android "),j={href:"https://github.com/2dust/v2rayNG",target:"_blank",rel:"noopener noreferrer"},B=s("v2rayNG"),N={href:"https://github.com/rurirei/Kitsunebi/tree/release_xtls",target:"_blank",rel:"noopener noreferrer"},O=s("Kitsunebi"),P=s("iOS / Mac "),Q={href:"https://apps.apple.com/app/shadowrocket/id932747118",target:"_blank",rel:"noopener noreferrer"},G=s("Shadowrocket"),I=a("h2",{id:"fallbacks",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#fallbacks","aria-hidden":"true"},"#"),s(" Fallbacks")],-1),K=a("p",null,"Fallbacks 是 Xray 独创的新型协议回落模式解析, 可有效防止主动探测, 自由配置常用端口多服务共享.",-1),M=a("p",null,"目前 Xray 中的 VLESS 和 trojan 协议支持 Fallbacks.",-1),R=s("Fallbacks 配置说明"),q=a("li",null,[a("a",{href:""},"Fallbacks 功能简析")],-1),H=s("Fallbacks 设计理论"),T=a("h2",{id:"vless-分享链接标准",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#vless-分享链接标准","aria-hidden":"true"},"#"),s(" VLESS 分享链接标准")],-1),U=s("感谢 "),z=a("img",{src:"https://avatars2.githubusercontent.com/u/7822648?s=32",width:"32px",height:"32px",alt:"a"},null,-1),C=s(),J={href:"https://github.com/DuckSoft",target:"_blank",rel:"noopener noreferrer"},Y=s("@DuckSoft"),Z=s(" 的提案!"),$=s("目前为初步提案, 详情请见 "),ee={href:"https://github.com/XTLS/Xray-core/issues/91",target:"_blank",rel:"noopener noreferrer"},le=s("VMessAEAD / VLESS 分享链接标准提案");u.render=function(s,i){const u=e("Badge"),re=e("OutboundLink"),ae=e("RouterLink");return l(),r(o,null,[h,c,a("h2",d,[p,b,n(u,{text:"WIP",type:"warning"})]),f,a("p",null,[a("a",g,[k,n(re)]),S]),E,a("ul",null,[a("li",null,[m,a("ul",null,[a("li",null,[a("a",y,[x,n(re)])]),a("li",null,[a("a",v,[_,n(re)])]),a("li",null,[a("a",L,[V,n(re)])])])]),a("li",null,[w,a("ul",null,[a("li",null,[a("a",A,[F,n(re)])]),a("li",null,[a("a",X,[D,n(re)])])])]),a("li",null,[W,a("ul",null,[a("li",null,[a("a",j,[B,n(re)])]),a("li",null,[a("a",N,[O,n(re)])])])]),a("li",null,[P,a("ul",null,[a("li",null,[a("a",Q,[G,n(re)])])])])]),I,K,M,a("ul",null,[a("li",null,[n(ae,{to:"/config/fallback/#fallbacks-%E9%85%8D%E7%BD%AE"},{default:t((()=>[R])),_:1})]),q,a("li",null,[n(ae,{to:"/config/fallback/#fallbacks-%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA"},{default:t((()=>[H])),_:1})])]),T,a("p",null,[U,z,C,a("a",J,[Y,n(re)]),Z]),a("p",null,[$,a("a",ee,[le,n(re)])])],64)};export default u;
